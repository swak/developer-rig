// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ExtensionView /> component mode views renders component view when in component mode 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    channelId="twitch"
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "bitsEnabled": false,
            "clientId": "mockClientId",
            "description": "description",
            "iconUrl": "iconUrl",
            "iconUrls": Object {
              "square100": "100x100",
            },
            "id": "id",
            "name": "name",
            "requestIdentityLink": false,
            "sku": "sku",
            "state": "Released",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
                "zoom": false,
                "zoomPixels": 100,
              },
              "config": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "liveConfig": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "mobile": Object {
                "viewerUrl": "https://test:8080",
              },
              "panel": Object {
                "canLinkExternalContent": false,
                "height": 300,
                "viewerUrl": "https://test:8080",
              },
              "videoOverlay": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": 0,
            "width": 0,
          }
    }
    id="0"
    iframe=""
    installationAbilities={
        Object {
            "isChatEnabled": true,
          }
    }
    isLocal={true}
    isPopout={false}
    linked={false}
    mockApiEnabled={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Broadcaster"
    type="component"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__header-container"
          >
                    <div
                              className="view__descriptor"
                    >
                              Broadcaster
                               (test:8080)
                    </div>
                    <div
                              className="view__edit_button"
                              onClick={[Function]}
                    >
                              Edit
                    </div>
          </div>
          <div
                    className="view__close_button"
                    onClick={[Function]}
          >
                    <img
                              alt="Close"
                              src="close_icon.png"
                    />
          </div>
</div>,
        <ExtensionComponentView
          bindIframeToParent={[Function]}
          channelId="twitch"
          className="view"
          extension={
                    Object {
                              "authorName": "test",
                              "bitsEnabled": false,
                              "clientId": "mockClientId",
                              "description": "description",
                              "iconUrl": "iconUrl",
                              "iconUrls": Object {
                                "square100": "100x100",
                              },
                              "id": "id",
                              "name": "name",
                              "requestIdentityLink": false,
                              "sku": "sku",
                              "state": "Released",
                              "summary": "summary",
                              "token": "token",
                              "vendorCode": "vendorCode",
                              "version": "0.1",
                              "views": Object {
                                "component": Object {
                                  "aspectHeight": 3000,
                                  "aspectWidth": 2500,
                                  "canLinkExternalContent": false,
                                  "viewerUrl": "https://test:8080",
                                  "zoom": false,
                                  "zoomPixels": 100,
                                },
                                "config": Object {
                                  "canLinkExternalContent": false,
                                  "viewerUrl": "https://test:8080",
                                },
                                "liveConfig": Object {
                                  "canLinkExternalContent": false,
                                  "viewerUrl": "https://test:8080",
                                },
                                "mobile": Object {
                                  "viewerUrl": "https://test:8080",
                                },
                                "panel": Object {
                                  "canLinkExternalContent": false,
                                  "height": 300,
                                  "viewerUrl": "https://test:8080",
                                },
                                "videoOverlay": Object {
                                  "canLinkExternalContent": false,
                                  "viewerUrl": "https://test:8080",
                                },
                              },
                              "whitelistedConfigUrls": Array [
                                "foo",
                              ],
                              "whitelistedPanelUrls": Array [
                                "bar",
                              ],
                            }
          }
          frameSize={
                    Object {
                              "height": 0,
                              "width": 0,
                            }
          }
          id="component-0"
          installationAbilities={
                    Object {
                              "isChatEnabled": true,
                            }
          }
          position={
                    Object {
                              "x": 0,
                              "y": 0,
                            }
          }
          role="Broadcaster"
/>,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": Object {},
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="view__header-container"
>
              <div
                            className="view__descriptor"
              >
                            Broadcaster
                             (test:8080)
              </div>
              <div
                            className="view__edit_button"
                            onClick={[Function]}
              >
                            Edit
              </div>
</div>,
            <div
              className="view__close_button"
              onClick={[Function]}
>
              <img
                            alt="Close"
                            src="close_icon.png"
              />
</div>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="view__descriptor"
>
                  Broadcaster
                   (test:8080)
</div>,
                false,
                <div
                  className="view__edit_button"
                  onClick={[Function]}
>
                  Edit
</div>,
              ],
              "className": "view__header-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Broadcaster",
                    null,
                    null,
                    " (test:8080)",
                  ],
                  "className": "view__descriptor",
                },
                "ref": null,
                "rendered": Array [
                  "Broadcaster",
                  null,
                  null,
                  " (test:8080)",
                ],
                "type": "div",
              },
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Edit",
                  "className": "view__edit_button",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Edit",
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt="Close"
                src="close_icon.png"
/>,
              "className": "view__close_button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Close",
                "src": "close_icon.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bindIframeToParent": [Function],
          "channelId": "twitch",
          "className": "view",
          "extension": Object {
            "authorName": "test",
            "bitsEnabled": false,
            "clientId": "mockClientId",
            "description": "description",
            "iconUrl": "iconUrl",
            "iconUrls": Object {
              "square100": "100x100",
            },
            "id": "id",
            "name": "name",
            "requestIdentityLink": false,
            "sku": "sku",
            "state": "Released",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
                "zoom": false,
                "zoomPixels": 100,
              },
              "config": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "liveConfig": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "mobile": Object {
                "viewerUrl": "https://test:8080",
              },
              "panel": Object {
                "canLinkExternalContent": false,
                "height": 300,
                "viewerUrl": "https://test:8080",
              },
              "videoOverlay": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          },
          "frameSize": Object {
            "height": 0,
            "width": 0,
          },
          "id": "component-0",
          "installationAbilities": Object {
            "isChatEnabled": true,
          },
          "position": Object {
            "x": 0,
            "y": 0,
          },
          "role": "Broadcaster",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__header-container"
            >
                        <div
                                    className="view__descriptor"
                        >
                                    Broadcaster
                                     (test:8080)
                        </div>
                        <div
                                    className="view__edit_button"
                                    onClick={[Function]}
                        >
                                    Edit
                        </div>
            </div>
            <div
                        className="view__close_button"
                        onClick={[Function]}
            >
                        <img
                                    alt="Close"
                                    src="close_icon.png"
                        />
            </div>
</div>,
          <ExtensionComponentView
            bindIframeToParent={[Function]}
            channelId="twitch"
            className="view"
            extension={
                        Object {
                                    "authorName": "test",
                                    "bitsEnabled": false,
                                    "clientId": "mockClientId",
                                    "description": "description",
                                    "iconUrl": "iconUrl",
                                    "iconUrls": Object {
                                      "square100": "100x100",
                                    },
                                    "id": "id",
                                    "name": "name",
                                    "requestIdentityLink": false,
                                    "sku": "sku",
                                    "state": "Released",
                                    "summary": "summary",
                                    "token": "token",
                                    "vendorCode": "vendorCode",
                                    "version": "0.1",
                                    "views": Object {
                                      "component": Object {
                                        "aspectHeight": 3000,
                                        "aspectWidth": 2500,
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                        "zoom": false,
                                        "zoomPixels": 100,
                                      },
                                      "config": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "liveConfig": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "mobile": Object {
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "panel": Object {
                                        "canLinkExternalContent": false,
                                        "height": 300,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "videoOverlay": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                    },
                                    "whitelistedConfigUrls": Array [
                                      "foo",
                                    ],
                                    "whitelistedPanelUrls": Array [
                                      "bar",
                                    ],
                                  }
            }
            frameSize={
                        Object {
                                    "height": 0,
                                    "width": 0,
                                  }
            }
            id="component-0"
            installationAbilities={
                        Object {
                                    "isChatEnabled": true,
                                  }
            }
            position={
                        Object {
                                    "x": 0,
                                    "y": 0,
                                  }
            }
            role="Broadcaster"
/>,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": Object {},
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="view__header-container"
>
                <div
                                className="view__descriptor"
                >
                                Broadcaster
                                 (test:8080)
                </div>
                <div
                                className="view__edit_button"
                                onClick={[Function]}
                >
                                Edit
                </div>
</div>,
              <div
                className="view__close_button"
                onClick={[Function]}
>
                <img
                                alt="Close"
                                src="close_icon.png"
                />
</div>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="view__descriptor"
>
                    Broadcaster
                     (test:8080)
</div>,
                  false,
                  <div
                    className="view__edit_button"
                    onClick={[Function]}
>
                    Edit
</div>,
                ],
                "className": "view__header-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Broadcaster",
                      null,
                      null,
                      " (test:8080)",
                    ],
                    "className": "view__descriptor",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Broadcaster",
                    null,
                    null,
                    " (test:8080)",
                  ],
                  "type": "div",
                },
                false,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Edit",
                    "className": "view__edit_button",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Edit",
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  alt="Close"
                  src="close_icon.png"
/>,
                "className": "view__close_button",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Close",
                  "src": "close_icon.png",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bindIframeToParent": [Function],
            "channelId": "twitch",
            "className": "view",
            "extension": Object {
              "authorName": "test",
              "bitsEnabled": false,
              "clientId": "mockClientId",
              "description": "description",
              "iconUrl": "iconUrl",
              "iconUrls": Object {
                "square100": "100x100",
              },
              "id": "id",
              "name": "name",
              "requestIdentityLink": false,
              "sku": "sku",
              "state": "Released",
              "summary": "summary",
              "token": "token",
              "vendorCode": "vendorCode",
              "version": "0.1",
              "views": Object {
                "component": Object {
                  "aspectHeight": 3000,
                  "aspectWidth": 2500,
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                  "zoom": false,
                  "zoomPixels": 100,
                },
                "config": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "liveConfig": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "mobile": Object {
                  "viewerUrl": "https://test:8080",
                },
                "panel": Object {
                  "canLinkExternalContent": false,
                  "height": 300,
                  "viewerUrl": "https://test:8080",
                },
                "videoOverlay": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
              },
              "whitelistedConfigUrls": Array [
                "foo",
              ],
              "whitelistedPanelUrls": Array [
                "bar",
              ],
            },
            "frameSize": Object {
              "height": 0,
              "width": 0,
            },
            "id": "component-0",
            "installationAbilities": Object {
              "isChatEnabled": true,
            },
            "position": Object {
              "x": 0,
              "y": 0,
            },
            "role": "Broadcaster",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> config mode views renders correctly when in config mode 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    channelId="twitch"
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "bitsEnabled": false,
            "clientId": "mockClientId",
            "description": "description",
            "iconUrl": "iconUrl",
            "iconUrls": Object {
              "square100": "100x100",
            },
            "id": "id",
            "name": "name",
            "requestIdentityLink": false,
            "sku": "sku",
            "state": "Released",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
                "zoom": false,
                "zoomPixels": 100,
              },
              "config": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "liveConfig": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "mobile": Object {
                "viewerUrl": "https://test:8080",
              },
              "panel": Object {
                "canLinkExternalContent": false,
                "height": 300,
                "viewerUrl": "https://test:8080",
              },
              "videoOverlay": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": 0,
            "width": 0,
          }
    }
    id="0"
    iframe=""
    installationAbilities={
        Object {
            "isChatEnabled": true,
          }
    }
    isLocal={true}
    isPopout={false}
    linked={false}
    mockApiEnabled={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Broadcaster"
    type="config"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__header-container"
          >
                    <div
                              className="view__descriptor"
                    >
                              Broadcaster
                               (test:8080)
                    </div>
          </div>
          <div
                    className="view__close_button"
                    onClick={[Function]}
          >
                    <img
                              alt="Close"
                              src="close_icon.png"
                    />
          </div>
</div>,
        <div
          className="view"
          style={
                    Object {
                              "height": "700px",
                              "width": "100%",
                            }
          }
>
          <ExtensionFrame
                    bindIframeToParent={[Function]}
                    channelId="twitch"
                    className="view"
                    extension={
                              Object {
                                        "authorName": "test",
                                        "bitsEnabled": false,
                                        "clientId": "mockClientId",
                                        "description": "description",
                                        "iconUrl": "iconUrl",
                                        "iconUrls": Object {
                                          "square100": "100x100",
                                        },
                                        "id": "id",
                                        "name": "name",
                                        "requestIdentityLink": false,
                                        "sku": "sku",
                                        "state": "Released",
                                        "summary": "summary",
                                        "token": "token",
                                        "vendorCode": "vendorCode",
                                        "version": "0.1",
                                        "views": Object {
                                          "component": Object {
                                            "aspectHeight": 3000,
                                            "aspectWidth": 2500,
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                            "zoom": false,
                                            "zoomPixels": 100,
                                          },
                                          "config": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "liveConfig": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "mobile": Object {
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "panel": Object {
                                            "canLinkExternalContent": false,
                                            "height": 300,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "videoOverlay": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                        },
                                        "whitelistedConfigUrls": Array [
                                          "foo",
                                        ],
                                        "whitelistedPanelUrls": Array [
                                          "bar",
                                        ],
                                      }
                    }
                    frameId="frameid-0"
                    installationAbilities={
                              Object {
                                        "isChatEnabled": true,
                                      }
                    }
                    isPopout={false}
                    mode="viewer"
                    type="config"
          />
</div>,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": Object {
        "height": "70vh",
        "overflow": "auto",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="view__header-container"
>
              <div
                            className="view__descriptor"
              >
                            Broadcaster
                             (test:8080)
              </div>
</div>,
            <div
              className="view__close_button"
              onClick={[Function]}
>
              <img
                            alt="Close"
                            src="close_icon.png"
              />
</div>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="view__descriptor"
>
                  Broadcaster
                   (test:8080)
</div>,
                false,
                false,
              ],
              "className": "view__header-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Broadcaster",
                    null,
                    null,
                    " (test:8080)",
                  ],
                  "className": "view__descriptor",
                },
                "ref": null,
                "rendered": Array [
                  "Broadcaster",
                  null,
                  null,
                  " (test:8080)",
                ],
                "type": "div",
              },
              false,
              false,
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt="Close"
                src="close_icon.png"
/>,
              "className": "view__close_button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Close",
                "src": "close_icon.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ExtensionFrame
            bindIframeToParent={[Function]}
            channelId="twitch"
            className="view"
            extension={
                        Object {
                                    "authorName": "test",
                                    "bitsEnabled": false,
                                    "clientId": "mockClientId",
                                    "description": "description",
                                    "iconUrl": "iconUrl",
                                    "iconUrls": Object {
                                      "square100": "100x100",
                                    },
                                    "id": "id",
                                    "name": "name",
                                    "requestIdentityLink": false,
                                    "sku": "sku",
                                    "state": "Released",
                                    "summary": "summary",
                                    "token": "token",
                                    "vendorCode": "vendorCode",
                                    "version": "0.1",
                                    "views": Object {
                                      "component": Object {
                                        "aspectHeight": 3000,
                                        "aspectWidth": 2500,
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                        "zoom": false,
                                        "zoomPixels": 100,
                                      },
                                      "config": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "liveConfig": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "mobile": Object {
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "panel": Object {
                                        "canLinkExternalContent": false,
                                        "height": 300,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "videoOverlay": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                    },
                                    "whitelistedConfigUrls": Array [
                                      "foo",
                                    ],
                                    "whitelistedPanelUrls": Array [
                                      "bar",
                                    ],
                                  }
            }
            frameId="frameid-0"
            installationAbilities={
                        Object {
                                    "isChatEnabled": true,
                                  }
            }
            isPopout={false}
            mode="viewer"
            type="config"
/>,
          "className": "view",
          "style": Object {
            "height": "700px",
            "width": "100%",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bindIframeToParent": [Function],
            "channelId": "twitch",
            "className": "view",
            "extension": Object {
              "authorName": "test",
              "bitsEnabled": false,
              "clientId": "mockClientId",
              "description": "description",
              "iconUrl": "iconUrl",
              "iconUrls": Object {
                "square100": "100x100",
              },
              "id": "id",
              "name": "name",
              "requestIdentityLink": false,
              "sku": "sku",
              "state": "Released",
              "summary": "summary",
              "token": "token",
              "vendorCode": "vendorCode",
              "version": "0.1",
              "views": Object {
                "component": Object {
                  "aspectHeight": 3000,
                  "aspectWidth": 2500,
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                  "zoom": false,
                  "zoomPixels": 100,
                },
                "config": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "liveConfig": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "mobile": Object {
                  "viewerUrl": "https://test:8080",
                },
                "panel": Object {
                  "canLinkExternalContent": false,
                  "height": 300,
                  "viewerUrl": "https://test:8080",
                },
                "videoOverlay": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
              },
              "whitelistedConfigUrls": Array [
                "foo",
              ],
              "whitelistedPanelUrls": Array [
                "bar",
              ],
            },
            "frameId": "frameid-0",
            "installationAbilities": Object {
              "isChatEnabled": true,
            },
            "isPopout": false,
            "mode": "viewer",
            "type": "config",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__header-container"
            >
                        <div
                                    className="view__descriptor"
                        >
                                    Broadcaster
                                     (test:8080)
                        </div>
            </div>
            <div
                        className="view__close_button"
                        onClick={[Function]}
            >
                        <img
                                    alt="Close"
                                    src="close_icon.png"
                        />
            </div>
</div>,
          <div
            className="view"
            style={
                        Object {
                                    "height": "700px",
                                    "width": "100%",
                                  }
            }
>
            <ExtensionFrame
                        bindIframeToParent={[Function]}
                        channelId="twitch"
                        className="view"
                        extension={
                                    Object {
                                                "authorName": "test",
                                                "bitsEnabled": false,
                                                "clientId": "mockClientId",
                                                "description": "description",
                                                "iconUrl": "iconUrl",
                                                "iconUrls": Object {
                                                  "square100": "100x100",
                                                },
                                                "id": "id",
                                                "name": "name",
                                                "requestIdentityLink": false,
                                                "sku": "sku",
                                                "state": "Released",
                                                "summary": "summary",
                                                "token": "token",
                                                "vendorCode": "vendorCode",
                                                "version": "0.1",
                                                "views": Object {
                                                  "component": Object {
                                                    "aspectHeight": 3000,
                                                    "aspectWidth": 2500,
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                    "zoom": false,
                                                    "zoomPixels": 100,
                                                  },
                                                  "config": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "liveConfig": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "mobile": Object {
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "panel": Object {
                                                    "canLinkExternalContent": false,
                                                    "height": 300,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "videoOverlay": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                },
                                                "whitelistedConfigUrls": Array [
                                                  "foo",
                                                ],
                                                "whitelistedPanelUrls": Array [
                                                  "bar",
                                                ],
                                              }
                        }
                        frameId="frameid-0"
                        installationAbilities={
                                    Object {
                                                "isChatEnabled": true,
                                              }
                        }
                        isPopout={false}
                        mode="viewer"
                        type="config"
            />
</div>,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": Object {
          "height": "70vh",
          "overflow": "auto",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="view__header-container"
>
                <div
                                className="view__descriptor"
                >
                                Broadcaster
                                 (test:8080)
                </div>
</div>,
              <div
                className="view__close_button"
                onClick={[Function]}
>
                <img
                                alt="Close"
                                src="close_icon.png"
                />
</div>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="view__descriptor"
>
                    Broadcaster
                     (test:8080)
</div>,
                  false,
                  false,
                ],
                "className": "view__header-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Broadcaster",
                      null,
                      null,
                      " (test:8080)",
                    ],
                    "className": "view__descriptor",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Broadcaster",
                    null,
                    null,
                    " (test:8080)",
                  ],
                  "type": "div",
                },
                false,
                false,
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  alt="Close"
                  src="close_icon.png"
/>,
                "className": "view__close_button",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Close",
                  "src": "close_icon.png",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ExtensionFrame
              bindIframeToParent={[Function]}
              channelId="twitch"
              className="view"
              extension={
                            Object {
                                          "authorName": "test",
                                          "bitsEnabled": false,
                                          "clientId": "mockClientId",
                                          "description": "description",
                                          "iconUrl": "iconUrl",
                                          "iconUrls": Object {
                                            "square100": "100x100",
                                          },
                                          "id": "id",
                                          "name": "name",
                                          "requestIdentityLink": false,
                                          "sku": "sku",
                                          "state": "Released",
                                          "summary": "summary",
                                          "token": "token",
                                          "vendorCode": "vendorCode",
                                          "version": "0.1",
                                          "views": Object {
                                            "component": Object {
                                              "aspectHeight": 3000,
                                              "aspectWidth": 2500,
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                              "zoom": false,
                                              "zoomPixels": 100,
                                            },
                                            "config": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "liveConfig": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "mobile": Object {
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "panel": Object {
                                              "canLinkExternalContent": false,
                                              "height": 300,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "videoOverlay": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                          },
                                          "whitelistedConfigUrls": Array [
                                            "foo",
                                          ],
                                          "whitelistedPanelUrls": Array [
                                            "bar",
                                          ],
                                        }
              }
              frameId="frameid-0"
              installationAbilities={
                            Object {
                                          "isChatEnabled": true,
                                        }
              }
              isPopout={false}
              mode="viewer"
              type="config"
/>,
            "className": "view",
            "style": Object {
              "height": "700px",
              "width": "100%",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bindIframeToParent": [Function],
              "channelId": "twitch",
              "className": "view",
              "extension": Object {
                "authorName": "test",
                "bitsEnabled": false,
                "clientId": "mockClientId",
                "description": "description",
                "iconUrl": "iconUrl",
                "iconUrls": Object {
                  "square100": "100x100",
                },
                "id": "id",
                "name": "name",
                "requestIdentityLink": false,
                "sku": "sku",
                "state": "Released",
                "summary": "summary",
                "token": "token",
                "vendorCode": "vendorCode",
                "version": "0.1",
                "views": Object {
                  "component": Object {
                    "aspectHeight": 3000,
                    "aspectWidth": 2500,
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                    "zoom": false,
                    "zoomPixels": 100,
                  },
                  "config": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                  "liveConfig": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                  "mobile": Object {
                    "viewerUrl": "https://test:8080",
                  },
                  "panel": Object {
                    "canLinkExternalContent": false,
                    "height": 300,
                    "viewerUrl": "https://test:8080",
                  },
                  "videoOverlay": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                },
                "whitelistedConfigUrls": Array [
                  "foo",
                ],
                "whitelistedPanelUrls": Array [
                  "bar",
                ],
              },
              "frameId": "frameid-0",
              "installationAbilities": Object {
                "isChatEnabled": true,
              },
              "isPopout": false,
              "mode": "viewer",
              "type": "config",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> live config mode views renders correctly when in config mode 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    channelId="twitch"
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "bitsEnabled": false,
            "clientId": "mockClientId",
            "description": "description",
            "iconUrl": "iconUrl",
            "iconUrls": Object {
              "square100": "100x100",
            },
            "id": "id",
            "name": "name",
            "requestIdentityLink": false,
            "sku": "sku",
            "state": "Released",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
                "zoom": false,
                "zoomPixels": 100,
              },
              "config": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "liveConfig": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "mobile": Object {
                "viewerUrl": "https://test:8080",
              },
              "panel": Object {
                "canLinkExternalContent": false,
                "height": 300,
                "viewerUrl": "https://test:8080",
              },
              "videoOverlay": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": 0,
            "width": 0,
          }
    }
    id="0"
    iframe=""
    installationAbilities={
        Object {
            "isChatEnabled": true,
          }
    }
    isLocal={true}
    isPopout={false}
    linked={false}
    mockApiEnabled={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Broadcaster"
    type="dashboard"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__header-container"
          >
                    <div
                              className="view__descriptor"
                    >
                              Broadcaster
                               (test:8080)
                    </div>
          </div>
          <div
                    className="view__close_button"
                    onClick={[Function]}
          >
                    <img
                              alt="Close"
                              src="close_icon.png"
                    />
          </div>
</div>,
        <div
          className="view"
          style={
                    Object {
                              "height": "300px",
                              "width": "320px",
                            }
          }
>
          <ExtensionFrame
                    bindIframeToParent={[Function]}
                    channelId="twitch"
                    className="view"
                    extension={
                              Object {
                                        "authorName": "test",
                                        "bitsEnabled": false,
                                        "clientId": "mockClientId",
                                        "description": "description",
                                        "iconUrl": "iconUrl",
                                        "iconUrls": Object {
                                          "square100": "100x100",
                                        },
                                        "id": "id",
                                        "name": "name",
                                        "requestIdentityLink": false,
                                        "sku": "sku",
                                        "state": "Released",
                                        "summary": "summary",
                                        "token": "token",
                                        "vendorCode": "vendorCode",
                                        "version": "0.1",
                                        "views": Object {
                                          "component": Object {
                                            "aspectHeight": 3000,
                                            "aspectWidth": 2500,
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                            "zoom": false,
                                            "zoomPixels": 100,
                                          },
                                          "config": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "liveConfig": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "mobile": Object {
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "panel": Object {
                                            "canLinkExternalContent": false,
                                            "height": 300,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "videoOverlay": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                        },
                                        "whitelistedConfigUrls": Array [
                                          "foo",
                                        ],
                                        "whitelistedPanelUrls": Array [
                                          "bar",
                                        ],
                                      }
                    }
                    frameId="frameid-0"
                    installationAbilities={
                              Object {
                                        "isChatEnabled": true,
                                      }
                    }
                    isPopout={false}
                    mode="viewer"
                    type="dashboard"
          />
</div>,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": Object {},
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="view__header-container"
>
              <div
                            className="view__descriptor"
              >
                            Broadcaster
                             (test:8080)
              </div>
</div>,
            <div
              className="view__close_button"
              onClick={[Function]}
>
              <img
                            alt="Close"
                            src="close_icon.png"
              />
</div>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="view__descriptor"
>
                  Broadcaster
                   (test:8080)
</div>,
                false,
                false,
              ],
              "className": "view__header-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Broadcaster",
                    null,
                    null,
                    " (test:8080)",
                  ],
                  "className": "view__descriptor",
                },
                "ref": null,
                "rendered": Array [
                  "Broadcaster",
                  null,
                  null,
                  " (test:8080)",
                ],
                "type": "div",
              },
              false,
              false,
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt="Close"
                src="close_icon.png"
/>,
              "className": "view__close_button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Close",
                "src": "close_icon.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ExtensionFrame
            bindIframeToParent={[Function]}
            channelId="twitch"
            className="view"
            extension={
                        Object {
                                    "authorName": "test",
                                    "bitsEnabled": false,
                                    "clientId": "mockClientId",
                                    "description": "description",
                                    "iconUrl": "iconUrl",
                                    "iconUrls": Object {
                                      "square100": "100x100",
                                    },
                                    "id": "id",
                                    "name": "name",
                                    "requestIdentityLink": false,
                                    "sku": "sku",
                                    "state": "Released",
                                    "summary": "summary",
                                    "token": "token",
                                    "vendorCode": "vendorCode",
                                    "version": "0.1",
                                    "views": Object {
                                      "component": Object {
                                        "aspectHeight": 3000,
                                        "aspectWidth": 2500,
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                        "zoom": false,
                                        "zoomPixels": 100,
                                      },
                                      "config": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "liveConfig": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "mobile": Object {
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "panel": Object {
                                        "canLinkExternalContent": false,
                                        "height": 300,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "videoOverlay": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                    },
                                    "whitelistedConfigUrls": Array [
                                      "foo",
                                    ],
                                    "whitelistedPanelUrls": Array [
                                      "bar",
                                    ],
                                  }
            }
            frameId="frameid-0"
            installationAbilities={
                        Object {
                                    "isChatEnabled": true,
                                  }
            }
            isPopout={false}
            mode="viewer"
            type="dashboard"
/>,
          "className": "view",
          "style": Object {
            "height": "300px",
            "width": "320px",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bindIframeToParent": [Function],
            "channelId": "twitch",
            "className": "view",
            "extension": Object {
              "authorName": "test",
              "bitsEnabled": false,
              "clientId": "mockClientId",
              "description": "description",
              "iconUrl": "iconUrl",
              "iconUrls": Object {
                "square100": "100x100",
              },
              "id": "id",
              "name": "name",
              "requestIdentityLink": false,
              "sku": "sku",
              "state": "Released",
              "summary": "summary",
              "token": "token",
              "vendorCode": "vendorCode",
              "version": "0.1",
              "views": Object {
                "component": Object {
                  "aspectHeight": 3000,
                  "aspectWidth": 2500,
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                  "zoom": false,
                  "zoomPixels": 100,
                },
                "config": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "liveConfig": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "mobile": Object {
                  "viewerUrl": "https://test:8080",
                },
                "panel": Object {
                  "canLinkExternalContent": false,
                  "height": 300,
                  "viewerUrl": "https://test:8080",
                },
                "videoOverlay": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
              },
              "whitelistedConfigUrls": Array [
                "foo",
              ],
              "whitelistedPanelUrls": Array [
                "bar",
              ],
            },
            "frameId": "frameid-0",
            "installationAbilities": Object {
              "isChatEnabled": true,
            },
            "isPopout": false,
            "mode": "viewer",
            "type": "dashboard",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__header-container"
            >
                        <div
                                    className="view__descriptor"
                        >
                                    Broadcaster
                                     (test:8080)
                        </div>
            </div>
            <div
                        className="view__close_button"
                        onClick={[Function]}
            >
                        <img
                                    alt="Close"
                                    src="close_icon.png"
                        />
            </div>
</div>,
          <div
            className="view"
            style={
                        Object {
                                    "height": "300px",
                                    "width": "320px",
                                  }
            }
>
            <ExtensionFrame
                        bindIframeToParent={[Function]}
                        channelId="twitch"
                        className="view"
                        extension={
                                    Object {
                                                "authorName": "test",
                                                "bitsEnabled": false,
                                                "clientId": "mockClientId",
                                                "description": "description",
                                                "iconUrl": "iconUrl",
                                                "iconUrls": Object {
                                                  "square100": "100x100",
                                                },
                                                "id": "id",
                                                "name": "name",
                                                "requestIdentityLink": false,
                                                "sku": "sku",
                                                "state": "Released",
                                                "summary": "summary",
                                                "token": "token",
                                                "vendorCode": "vendorCode",
                                                "version": "0.1",
                                                "views": Object {
                                                  "component": Object {
                                                    "aspectHeight": 3000,
                                                    "aspectWidth": 2500,
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                    "zoom": false,
                                                    "zoomPixels": 100,
                                                  },
                                                  "config": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "liveConfig": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "mobile": Object {
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "panel": Object {
                                                    "canLinkExternalContent": false,
                                                    "height": 300,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "videoOverlay": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                },
                                                "whitelistedConfigUrls": Array [
                                                  "foo",
                                                ],
                                                "whitelistedPanelUrls": Array [
                                                  "bar",
                                                ],
                                              }
                        }
                        frameId="frameid-0"
                        installationAbilities={
                                    Object {
                                                "isChatEnabled": true,
                                              }
                        }
                        isPopout={false}
                        mode="viewer"
                        type="dashboard"
            />
</div>,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": Object {},
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="view__header-container"
>
                <div
                                className="view__descriptor"
                >
                                Broadcaster
                                 (test:8080)
                </div>
</div>,
              <div
                className="view__close_button"
                onClick={[Function]}
>
                <img
                                alt="Close"
                                src="close_icon.png"
                />
</div>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="view__descriptor"
>
                    Broadcaster
                     (test:8080)
</div>,
                  false,
                  false,
                ],
                "className": "view__header-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Broadcaster",
                      null,
                      null,
                      " (test:8080)",
                    ],
                    "className": "view__descriptor",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Broadcaster",
                    null,
                    null,
                    " (test:8080)",
                  ],
                  "type": "div",
                },
                false,
                false,
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  alt="Close"
                  src="close_icon.png"
/>,
                "className": "view__close_button",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Close",
                  "src": "close_icon.png",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ExtensionFrame
              bindIframeToParent={[Function]}
              channelId="twitch"
              className="view"
              extension={
                            Object {
                                          "authorName": "test",
                                          "bitsEnabled": false,
                                          "clientId": "mockClientId",
                                          "description": "description",
                                          "iconUrl": "iconUrl",
                                          "iconUrls": Object {
                                            "square100": "100x100",
                                          },
                                          "id": "id",
                                          "name": "name",
                                          "requestIdentityLink": false,
                                          "sku": "sku",
                                          "state": "Released",
                                          "summary": "summary",
                                          "token": "token",
                                          "vendorCode": "vendorCode",
                                          "version": "0.1",
                                          "views": Object {
                                            "component": Object {
                                              "aspectHeight": 3000,
                                              "aspectWidth": 2500,
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                              "zoom": false,
                                              "zoomPixels": 100,
                                            },
                                            "config": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "liveConfig": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "mobile": Object {
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "panel": Object {
                                              "canLinkExternalContent": false,
                                              "height": 300,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "videoOverlay": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                          },
                                          "whitelistedConfigUrls": Array [
                                            "foo",
                                          ],
                                          "whitelistedPanelUrls": Array [
                                            "bar",
                                          ],
                                        }
              }
              frameId="frameid-0"
              installationAbilities={
                            Object {
                                          "isChatEnabled": true,
                                        }
              }
              isPopout={false}
              mode="viewer"
              type="dashboard"
/>,
            "className": "view",
            "style": Object {
              "height": "300px",
              "width": "320px",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bindIframeToParent": [Function],
              "channelId": "twitch",
              "className": "view",
              "extension": Object {
                "authorName": "test",
                "bitsEnabled": false,
                "clientId": "mockClientId",
                "description": "description",
                "iconUrl": "iconUrl",
                "iconUrls": Object {
                  "square100": "100x100",
                },
                "id": "id",
                "name": "name",
                "requestIdentityLink": false,
                "sku": "sku",
                "state": "Released",
                "summary": "summary",
                "token": "token",
                "vendorCode": "vendorCode",
                "version": "0.1",
                "views": Object {
                  "component": Object {
                    "aspectHeight": 3000,
                    "aspectWidth": 2500,
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                    "zoom": false,
                    "zoomPixels": 100,
                  },
                  "config": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                  "liveConfig": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                  "mobile": Object {
                    "viewerUrl": "https://test:8080",
                  },
                  "panel": Object {
                    "canLinkExternalContent": false,
                    "height": 300,
                    "viewerUrl": "https://test:8080",
                  },
                  "videoOverlay": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                },
                "whitelistedConfigUrls": Array [
                  "foo",
                ],
                "whitelistedPanelUrls": Array [
                  "bar",
                ],
              },
              "frameId": "frameid-0",
              "installationAbilities": Object {
                "isChatEnabled": true,
              },
              "isPopout": false,
              "mode": "viewer",
              "type": "dashboard",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> mobile mode views renders correctly when in mobile mode 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    channelId="twitch"
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "bitsEnabled": false,
            "clientId": "mockClientId",
            "description": "description",
            "iconUrl": "iconUrl",
            "iconUrls": Object {
              "square100": "100x100",
            },
            "id": "id",
            "name": "name",
            "requestIdentityLink": false,
            "sku": "sku",
            "state": "Released",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
                "zoom": false,
                "zoomPixels": 100,
              },
              "config": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "liveConfig": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "mobile": Object {
                "viewerUrl": "https://test:8080",
              },
              "panel": Object {
                "canLinkExternalContent": false,
                "height": 300,
                "viewerUrl": "https://test:8080",
              },
              "videoOverlay": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": 0,
            "width": 0,
          }
    }
    id="0"
    iframe=""
    installationAbilities={
        Object {
            "isChatEnabled": true,
          }
    }
    isLocal={true}
    isPopout={false}
    linked={false}
    mockApiEnabled={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    orientation="Portrait"
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Broadcaster"
    type="mobile"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__header-container"
          >
                    <div
                              className="view__descriptor"
                    >
                              Broadcaster
                               (test:8080)
                    </div>
                    <div
                              className="view__edit_button"
                              onClick={[Function]}
                    >
                              Edit
                    </div>
          </div>
          <div
                    className="view__close_button"
                    onClick={[Function]}
          >
                    <img
                              alt="Close"
                              src="close_icon.png"
                    />
          </div>
</div>,
        <ExtensionMobileView
          bindIframeToParent={[Function]}
          channelId="twitch"
          className="view"
          extension={
                    Object {
                              "authorName": "test",
                              "bitsEnabled": false,
                              "clientId": "mockClientId",
                              "description": "description",
                              "iconUrl": "iconUrl",
                              "iconUrls": Object {
                                "square100": "100x100",
                              },
                              "id": "id",
                              "name": "name",
                              "requestIdentityLink": false,
                              "sku": "sku",
                              "state": "Released",
                              "summary": "summary",
                              "token": "token",
                              "vendorCode": "vendorCode",
                              "version": "0.1",
                              "views": Object {
                                "component": Object {
                                  "aspectHeight": 3000,
                                  "aspectWidth": 2500,
                                  "canLinkExternalContent": false,
                                  "viewerUrl": "https://test:8080",
                                  "zoom": false,
                                  "zoomPixels": 100,
                                },
                                "config": Object {
                                  "canLinkExternalContent": false,
                                  "viewerUrl": "https://test:8080",
                                },
                                "liveConfig": Object {
                                  "canLinkExternalContent": false,
                                  "viewerUrl": "https://test:8080",
                                },
                                "mobile": Object {
                                  "viewerUrl": "https://test:8080",
                                },
                                "panel": Object {
                                  "canLinkExternalContent": false,
                                  "height": 300,
                                  "viewerUrl": "https://test:8080",
                                },
                                "videoOverlay": Object {
                                  "canLinkExternalContent": false,
                                  "viewerUrl": "https://test:8080",
                                },
                              },
                              "whitelistedConfigUrls": Array [
                                "foo",
                              ],
                              "whitelistedPanelUrls": Array [
                                "bar",
                              ],
                            }
          }
          frameSize={
                    Object {
                              "height": 0,
                              "width": 0,
                            }
          }
          id="mobile-0"
          installationAbilities={
                    Object {
                              "isChatEnabled": true,
                            }
          }
          orientation="Portrait"
          position={
                    Object {
                              "x": 0,
                              "y": 0,
                            }
          }
          role="Broadcaster"
/>,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": Object {},
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="view__header-container"
>
              <div
                            className="view__descriptor"
              >
                            Broadcaster
                             (test:8080)
              </div>
              <div
                            className="view__edit_button"
                            onClick={[Function]}
              >
                            Edit
              </div>
</div>,
            <div
              className="view__close_button"
              onClick={[Function]}
>
              <img
                            alt="Close"
                            src="close_icon.png"
              />
</div>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="view__descriptor"
>
                  Broadcaster
                   (test:8080)
</div>,
                false,
                <div
                  className="view__edit_button"
                  onClick={[Function]}
>
                  Edit
</div>,
              ],
              "className": "view__header-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Broadcaster",
                    null,
                    null,
                    " (test:8080)",
                  ],
                  "className": "view__descriptor",
                },
                "ref": null,
                "rendered": Array [
                  "Broadcaster",
                  null,
                  null,
                  " (test:8080)",
                ],
                "type": "div",
              },
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Edit",
                  "className": "view__edit_button",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Edit",
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt="Close"
                src="close_icon.png"
/>,
              "className": "view__close_button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Close",
                "src": "close_icon.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bindIframeToParent": [Function],
          "channelId": "twitch",
          "className": "view",
          "extension": Object {
            "authorName": "test",
            "bitsEnabled": false,
            "clientId": "mockClientId",
            "description": "description",
            "iconUrl": "iconUrl",
            "iconUrls": Object {
              "square100": "100x100",
            },
            "id": "id",
            "name": "name",
            "requestIdentityLink": false,
            "sku": "sku",
            "state": "Released",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
                "zoom": false,
                "zoomPixels": 100,
              },
              "config": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "liveConfig": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "mobile": Object {
                "viewerUrl": "https://test:8080",
              },
              "panel": Object {
                "canLinkExternalContent": false,
                "height": 300,
                "viewerUrl": "https://test:8080",
              },
              "videoOverlay": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          },
          "frameSize": Object {
            "height": 0,
            "width": 0,
          },
          "id": "mobile-0",
          "installationAbilities": Object {
            "isChatEnabled": true,
          },
          "orientation": "Portrait",
          "position": Object {
            "x": 0,
            "y": 0,
          },
          "role": "Broadcaster",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__header-container"
            >
                        <div
                                    className="view__descriptor"
                        >
                                    Broadcaster
                                     (test:8080)
                        </div>
                        <div
                                    className="view__edit_button"
                                    onClick={[Function]}
                        >
                                    Edit
                        </div>
            </div>
            <div
                        className="view__close_button"
                        onClick={[Function]}
            >
                        <img
                                    alt="Close"
                                    src="close_icon.png"
                        />
            </div>
</div>,
          <ExtensionMobileView
            bindIframeToParent={[Function]}
            channelId="twitch"
            className="view"
            extension={
                        Object {
                                    "authorName": "test",
                                    "bitsEnabled": false,
                                    "clientId": "mockClientId",
                                    "description": "description",
                                    "iconUrl": "iconUrl",
                                    "iconUrls": Object {
                                      "square100": "100x100",
                                    },
                                    "id": "id",
                                    "name": "name",
                                    "requestIdentityLink": false,
                                    "sku": "sku",
                                    "state": "Released",
                                    "summary": "summary",
                                    "token": "token",
                                    "vendorCode": "vendorCode",
                                    "version": "0.1",
                                    "views": Object {
                                      "component": Object {
                                        "aspectHeight": 3000,
                                        "aspectWidth": 2500,
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                        "zoom": false,
                                        "zoomPixels": 100,
                                      },
                                      "config": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "liveConfig": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "mobile": Object {
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "panel": Object {
                                        "canLinkExternalContent": false,
                                        "height": 300,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "videoOverlay": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                    },
                                    "whitelistedConfigUrls": Array [
                                      "foo",
                                    ],
                                    "whitelistedPanelUrls": Array [
                                      "bar",
                                    ],
                                  }
            }
            frameSize={
                        Object {
                                    "height": 0,
                                    "width": 0,
                                  }
            }
            id="mobile-0"
            installationAbilities={
                        Object {
                                    "isChatEnabled": true,
                                  }
            }
            orientation="Portrait"
            position={
                        Object {
                                    "x": 0,
                                    "y": 0,
                                  }
            }
            role="Broadcaster"
/>,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": Object {},
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="view__header-container"
>
                <div
                                className="view__descriptor"
                >
                                Broadcaster
                                 (test:8080)
                </div>
                <div
                                className="view__edit_button"
                                onClick={[Function]}
                >
                                Edit
                </div>
</div>,
              <div
                className="view__close_button"
                onClick={[Function]}
>
                <img
                                alt="Close"
                                src="close_icon.png"
                />
</div>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="view__descriptor"
>
                    Broadcaster
                     (test:8080)
</div>,
                  false,
                  <div
                    className="view__edit_button"
                    onClick={[Function]}
>
                    Edit
</div>,
                ],
                "className": "view__header-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Broadcaster",
                      null,
                      null,
                      " (test:8080)",
                    ],
                    "className": "view__descriptor",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Broadcaster",
                    null,
                    null,
                    " (test:8080)",
                  ],
                  "type": "div",
                },
                false,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Edit",
                    "className": "view__edit_button",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Edit",
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  alt="Close"
                  src="close_icon.png"
/>,
                "className": "view__close_button",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Close",
                  "src": "close_icon.png",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bindIframeToParent": [Function],
            "channelId": "twitch",
            "className": "view",
            "extension": Object {
              "authorName": "test",
              "bitsEnabled": false,
              "clientId": "mockClientId",
              "description": "description",
              "iconUrl": "iconUrl",
              "iconUrls": Object {
                "square100": "100x100",
              },
              "id": "id",
              "name": "name",
              "requestIdentityLink": false,
              "sku": "sku",
              "state": "Released",
              "summary": "summary",
              "token": "token",
              "vendorCode": "vendorCode",
              "version": "0.1",
              "views": Object {
                "component": Object {
                  "aspectHeight": 3000,
                  "aspectWidth": 2500,
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                  "zoom": false,
                  "zoomPixels": 100,
                },
                "config": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "liveConfig": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "mobile": Object {
                  "viewerUrl": "https://test:8080",
                },
                "panel": Object {
                  "canLinkExternalContent": false,
                  "height": 300,
                  "viewerUrl": "https://test:8080",
                },
                "videoOverlay": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
              },
              "whitelistedConfigUrls": Array [
                "foo",
              ],
              "whitelistedPanelUrls": Array [
                "bar",
              ],
            },
            "frameSize": Object {
              "height": 0,
              "width": 0,
            },
            "id": "mobile-0",
            "installationAbilities": Object {
              "isChatEnabled": true,
            },
            "orientation": "Portrait",
            "position": Object {
              "x": 0,
              "y": 0,
            },
            "role": "Broadcaster",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> overlay mode views renders correctly in overlay mode as a Broadcaster 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    channelId="twitch"
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "bitsEnabled": false,
            "clientId": "mockClientId",
            "description": "description",
            "iconUrl": "iconUrl",
            "iconUrls": Object {
              "square100": "100x100",
            },
            "id": "id",
            "name": "name",
            "requestIdentityLink": false,
            "sku": "sku",
            "state": "Released",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
                "zoom": false,
                "zoomPixels": 100,
              },
              "config": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "liveConfig": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "mobile": Object {
                "viewerUrl": "https://test:8080",
              },
              "panel": Object {
                "canLinkExternalContent": false,
                "height": 300,
                "viewerUrl": "https://test:8080",
              },
              "videoOverlay": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": 1,
            "width": 1,
          }
    }
    id="0"
    iframe=""
    installationAbilities={
        Object {
            "isChatEnabled": true,
          }
    }
    isLocal={true}
    isPopout={false}
    linked={false}
    mockApiEnabled={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Broadcaster"
    type="video_overlay"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__header-container"
          >
                    <div
                              className="view__descriptor"
                    >
                              Broadcaster
                               (test:8080)
                    </div>
          </div>
          <div
                    className="view__close_button"
                    onClick={[Function]}
          >
                    <img
                              alt="Close"
                              src="close_icon.png"
                    />
          </div>
</div>,
        <div
          className="view nono_zone"
          style={
                    Object {
                              "height": "1px",
                              "width": "1px",
                            }
          }
>
          <ExtensionFrame
                    bindIframeToParent={[Function]}
                    channelId="twitch"
                    className="view"
                    extension={
                              Object {
                                        "authorName": "test",
                                        "bitsEnabled": false,
                                        "clientId": "mockClientId",
                                        "description": "description",
                                        "iconUrl": "iconUrl",
                                        "iconUrls": Object {
                                          "square100": "100x100",
                                        },
                                        "id": "id",
                                        "name": "name",
                                        "requestIdentityLink": false,
                                        "sku": "sku",
                                        "state": "Released",
                                        "summary": "summary",
                                        "token": "token",
                                        "vendorCode": "vendorCode",
                                        "version": "0.1",
                                        "views": Object {
                                          "component": Object {
                                            "aspectHeight": 3000,
                                            "aspectWidth": 2500,
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                            "zoom": false,
                                            "zoomPixels": 100,
                                          },
                                          "config": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "liveConfig": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "mobile": Object {
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "panel": Object {
                                            "canLinkExternalContent": false,
                                            "height": 300,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "videoOverlay": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                        },
                                        "whitelistedConfigUrls": Array [
                                          "foo",
                                        ],
                                        "whitelistedPanelUrls": Array [
                                          "bar",
                                        ],
                                      }
                    }
                    frameId="frameid-0"
                    installationAbilities={
                              Object {
                                        "isChatEnabled": true,
                                      }
                    }
                    isPopout={false}
                    mode="viewer"
                    type="video_overlay"
          />
</div>,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": Object {},
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="view__header-container"
>
              <div
                            className="view__descriptor"
              >
                            Broadcaster
                             (test:8080)
              </div>
</div>,
            <div
              className="view__close_button"
              onClick={[Function]}
>
              <img
                            alt="Close"
                            src="close_icon.png"
              />
</div>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="view__descriptor"
>
                  Broadcaster
                   (test:8080)
</div>,
                false,
                false,
              ],
              "className": "view__header-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Broadcaster",
                    null,
                    null,
                    " (test:8080)",
                  ],
                  "className": "view__descriptor",
                },
                "ref": null,
                "rendered": Array [
                  "Broadcaster",
                  null,
                  null,
                  " (test:8080)",
                ],
                "type": "div",
              },
              false,
              false,
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt="Close"
                src="close_icon.png"
/>,
              "className": "view__close_button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Close",
                "src": "close_icon.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ExtensionFrame
            bindIframeToParent={[Function]}
            channelId="twitch"
            className="view"
            extension={
                        Object {
                                    "authorName": "test",
                                    "bitsEnabled": false,
                                    "clientId": "mockClientId",
                                    "description": "description",
                                    "iconUrl": "iconUrl",
                                    "iconUrls": Object {
                                      "square100": "100x100",
                                    },
                                    "id": "id",
                                    "name": "name",
                                    "requestIdentityLink": false,
                                    "sku": "sku",
                                    "state": "Released",
                                    "summary": "summary",
                                    "token": "token",
                                    "vendorCode": "vendorCode",
                                    "version": "0.1",
                                    "views": Object {
                                      "component": Object {
                                        "aspectHeight": 3000,
                                        "aspectWidth": 2500,
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                        "zoom": false,
                                        "zoomPixels": 100,
                                      },
                                      "config": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "liveConfig": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "mobile": Object {
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "panel": Object {
                                        "canLinkExternalContent": false,
                                        "height": 300,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "videoOverlay": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                    },
                                    "whitelistedConfigUrls": Array [
                                      "foo",
                                    ],
                                    "whitelistedPanelUrls": Array [
                                      "bar",
                                    ],
                                  }
            }
            frameId="frameid-0"
            installationAbilities={
                        Object {
                                    "isChatEnabled": true,
                                  }
            }
            isPopout={false}
            mode="viewer"
            type="video_overlay"
/>,
          "className": "view nono_zone",
          "style": Object {
            "height": "1px",
            "width": "1px",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bindIframeToParent": [Function],
            "channelId": "twitch",
            "className": "view",
            "extension": Object {
              "authorName": "test",
              "bitsEnabled": false,
              "clientId": "mockClientId",
              "description": "description",
              "iconUrl": "iconUrl",
              "iconUrls": Object {
                "square100": "100x100",
              },
              "id": "id",
              "name": "name",
              "requestIdentityLink": false,
              "sku": "sku",
              "state": "Released",
              "summary": "summary",
              "token": "token",
              "vendorCode": "vendorCode",
              "version": "0.1",
              "views": Object {
                "component": Object {
                  "aspectHeight": 3000,
                  "aspectWidth": 2500,
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                  "zoom": false,
                  "zoomPixels": 100,
                },
                "config": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "liveConfig": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "mobile": Object {
                  "viewerUrl": "https://test:8080",
                },
                "panel": Object {
                  "canLinkExternalContent": false,
                  "height": 300,
                  "viewerUrl": "https://test:8080",
                },
                "videoOverlay": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
              },
              "whitelistedConfigUrls": Array [
                "foo",
              ],
              "whitelistedPanelUrls": Array [
                "bar",
              ],
            },
            "frameId": "frameid-0",
            "installationAbilities": Object {
              "isChatEnabled": true,
            },
            "isPopout": false,
            "mode": "viewer",
            "type": "video_overlay",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__header-container"
            >
                        <div
                                    className="view__descriptor"
                        >
                                    Broadcaster
                                     (test:8080)
                        </div>
            </div>
            <div
                        className="view__close_button"
                        onClick={[Function]}
            >
                        <img
                                    alt="Close"
                                    src="close_icon.png"
                        />
            </div>
</div>,
          <div
            className="view nono_zone"
            style={
                        Object {
                                    "height": "1px",
                                    "width": "1px",
                                  }
            }
>
            <ExtensionFrame
                        bindIframeToParent={[Function]}
                        channelId="twitch"
                        className="view"
                        extension={
                                    Object {
                                                "authorName": "test",
                                                "bitsEnabled": false,
                                                "clientId": "mockClientId",
                                                "description": "description",
                                                "iconUrl": "iconUrl",
                                                "iconUrls": Object {
                                                  "square100": "100x100",
                                                },
                                                "id": "id",
                                                "name": "name",
                                                "requestIdentityLink": false,
                                                "sku": "sku",
                                                "state": "Released",
                                                "summary": "summary",
                                                "token": "token",
                                                "vendorCode": "vendorCode",
                                                "version": "0.1",
                                                "views": Object {
                                                  "component": Object {
                                                    "aspectHeight": 3000,
                                                    "aspectWidth": 2500,
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                    "zoom": false,
                                                    "zoomPixels": 100,
                                                  },
                                                  "config": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "liveConfig": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "mobile": Object {
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "panel": Object {
                                                    "canLinkExternalContent": false,
                                                    "height": 300,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "videoOverlay": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                },
                                                "whitelistedConfigUrls": Array [
                                                  "foo",
                                                ],
                                                "whitelistedPanelUrls": Array [
                                                  "bar",
                                                ],
                                              }
                        }
                        frameId="frameid-0"
                        installationAbilities={
                                    Object {
                                                "isChatEnabled": true,
                                              }
                        }
                        isPopout={false}
                        mode="viewer"
                        type="video_overlay"
            />
</div>,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": Object {},
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="view__header-container"
>
                <div
                                className="view__descriptor"
                >
                                Broadcaster
                                 (test:8080)
                </div>
</div>,
              <div
                className="view__close_button"
                onClick={[Function]}
>
                <img
                                alt="Close"
                                src="close_icon.png"
                />
</div>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="view__descriptor"
>
                    Broadcaster
                     (test:8080)
</div>,
                  false,
                  false,
                ],
                "className": "view__header-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Broadcaster",
                      null,
                      null,
                      " (test:8080)",
                    ],
                    "className": "view__descriptor",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Broadcaster",
                    null,
                    null,
                    " (test:8080)",
                  ],
                  "type": "div",
                },
                false,
                false,
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  alt="Close"
                  src="close_icon.png"
/>,
                "className": "view__close_button",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Close",
                  "src": "close_icon.png",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ExtensionFrame
              bindIframeToParent={[Function]}
              channelId="twitch"
              className="view"
              extension={
                            Object {
                                          "authorName": "test",
                                          "bitsEnabled": false,
                                          "clientId": "mockClientId",
                                          "description": "description",
                                          "iconUrl": "iconUrl",
                                          "iconUrls": Object {
                                            "square100": "100x100",
                                          },
                                          "id": "id",
                                          "name": "name",
                                          "requestIdentityLink": false,
                                          "sku": "sku",
                                          "state": "Released",
                                          "summary": "summary",
                                          "token": "token",
                                          "vendorCode": "vendorCode",
                                          "version": "0.1",
                                          "views": Object {
                                            "component": Object {
                                              "aspectHeight": 3000,
                                              "aspectWidth": 2500,
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                              "zoom": false,
                                              "zoomPixels": 100,
                                            },
                                            "config": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "liveConfig": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "mobile": Object {
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "panel": Object {
                                              "canLinkExternalContent": false,
                                              "height": 300,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "videoOverlay": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                          },
                                          "whitelistedConfigUrls": Array [
                                            "foo",
                                          ],
                                          "whitelistedPanelUrls": Array [
                                            "bar",
                                          ],
                                        }
              }
              frameId="frameid-0"
              installationAbilities={
                            Object {
                                          "isChatEnabled": true,
                                        }
              }
              isPopout={false}
              mode="viewer"
              type="video_overlay"
/>,
            "className": "view nono_zone",
            "style": Object {
              "height": "1px",
              "width": "1px",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bindIframeToParent": [Function],
              "channelId": "twitch",
              "className": "view",
              "extension": Object {
                "authorName": "test",
                "bitsEnabled": false,
                "clientId": "mockClientId",
                "description": "description",
                "iconUrl": "iconUrl",
                "iconUrls": Object {
                  "square100": "100x100",
                },
                "id": "id",
                "name": "name",
                "requestIdentityLink": false,
                "sku": "sku",
                "state": "Released",
                "summary": "summary",
                "token": "token",
                "vendorCode": "vendorCode",
                "version": "0.1",
                "views": Object {
                  "component": Object {
                    "aspectHeight": 3000,
                    "aspectWidth": 2500,
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                    "zoom": false,
                    "zoomPixels": 100,
                  },
                  "config": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                  "liveConfig": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                  "mobile": Object {
                    "viewerUrl": "https://test:8080",
                  },
                  "panel": Object {
                    "canLinkExternalContent": false,
                    "height": 300,
                    "viewerUrl": "https://test:8080",
                  },
                  "videoOverlay": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                },
                "whitelistedConfigUrls": Array [
                  "foo",
                ],
                "whitelistedPanelUrls": Array [
                  "bar",
                ],
              },
              "frameId": "frameid-0",
              "installationAbilities": Object {
                "isChatEnabled": true,
              },
              "isPopout": false,
              "mode": "viewer",
              "type": "video_overlay",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> overlay mode views renders correctly when in overlay mode as a Logged In and Linked Viewer 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    channelId="twitch"
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "bitsEnabled": false,
            "clientId": "mockClientId",
            "description": "description",
            "iconUrl": "iconUrl",
            "iconUrls": Object {
              "square100": "100x100",
            },
            "id": "id",
            "name": "name",
            "requestIdentityLink": false,
            "sku": "sku",
            "state": "Released",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
                "zoom": false,
                "zoomPixels": 100,
              },
              "config": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "liveConfig": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "mobile": Object {
                "viewerUrl": "https://test:8080",
              },
              "panel": Object {
                "canLinkExternalContent": false,
                "height": 300,
                "viewerUrl": "https://test:8080",
              },
              "videoOverlay": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": 1,
            "width": 1,
          }
    }
    id="0"
    iframe=""
    installationAbilities={
        Object {
            "isChatEnabled": true,
          }
    }
    isLocal={true}
    isPopout={false}
    linked={true}
    mockApiEnabled={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Logged-In Viewer"
    type="panel"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__header-container"
          >
                    <div
                              className="view__descriptor"
                    >
                              Logged-In Viewer
                               Linked
                               (test:8080)
                    </div>
          </div>
          <div
                    className="view__close_button"
                    onClick={[Function]}
          >
                    <img
                              alt="Close"
                              src="close_icon.png"
                    />
          </div>
</div>,
        <div
          className="view"
          style={
                    Object {
                              "height": "300px",
                              "width": "320px",
                            }
          }
>
          <ExtensionFrame
                    bindIframeToParent={[Function]}
                    channelId="twitch"
                    className="view"
                    extension={
                              Object {
                                        "authorName": "test",
                                        "bitsEnabled": false,
                                        "clientId": "mockClientId",
                                        "description": "description",
                                        "iconUrl": "iconUrl",
                                        "iconUrls": Object {
                                          "square100": "100x100",
                                        },
                                        "id": "id",
                                        "name": "name",
                                        "requestIdentityLink": false,
                                        "sku": "sku",
                                        "state": "Released",
                                        "summary": "summary",
                                        "token": "token",
                                        "vendorCode": "vendorCode",
                                        "version": "0.1",
                                        "views": Object {
                                          "component": Object {
                                            "aspectHeight": 3000,
                                            "aspectWidth": 2500,
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                            "zoom": false,
                                            "zoomPixels": 100,
                                          },
                                          "config": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "liveConfig": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "mobile": Object {
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "panel": Object {
                                            "canLinkExternalContent": false,
                                            "height": 300,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "videoOverlay": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                        },
                                        "whitelistedConfigUrls": Array [
                                          "foo",
                                        ],
                                        "whitelistedPanelUrls": Array [
                                          "bar",
                                        ],
                                      }
                    }
                    frameId="frameid-0"
                    installationAbilities={
                              Object {
                                        "isChatEnabled": true,
                                      }
                    }
                    isPopout={false}
                    mode="viewer"
                    type="panel"
          />
</div>,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": Object {},
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="view__header-container"
>
              <div
                            className="view__descriptor"
              >
                            Logged-In Viewer
                             Linked
                             (test:8080)
              </div>
</div>,
            <div
              className="view__close_button"
              onClick={[Function]}
>
              <img
                            alt="Close"
                            src="close_icon.png"
              />
</div>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="view__descriptor"
>
                  Logged-In Viewer
                   Linked
                   (test:8080)
</div>,
                false,
                false,
              ],
              "className": "view__header-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Logged-In Viewer",
                    " Linked",
                    null,
                    " (test:8080)",
                  ],
                  "className": "view__descriptor",
                },
                "ref": null,
                "rendered": Array [
                  "Logged-In Viewer",
                  " Linked",
                  null,
                  " (test:8080)",
                ],
                "type": "div",
              },
              false,
              false,
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt="Close"
                src="close_icon.png"
/>,
              "className": "view__close_button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Close",
                "src": "close_icon.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ExtensionFrame
            bindIframeToParent={[Function]}
            channelId="twitch"
            className="view"
            extension={
                        Object {
                                    "authorName": "test",
                                    "bitsEnabled": false,
                                    "clientId": "mockClientId",
                                    "description": "description",
                                    "iconUrl": "iconUrl",
                                    "iconUrls": Object {
                                      "square100": "100x100",
                                    },
                                    "id": "id",
                                    "name": "name",
                                    "requestIdentityLink": false,
                                    "sku": "sku",
                                    "state": "Released",
                                    "summary": "summary",
                                    "token": "token",
                                    "vendorCode": "vendorCode",
                                    "version": "0.1",
                                    "views": Object {
                                      "component": Object {
                                        "aspectHeight": 3000,
                                        "aspectWidth": 2500,
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                        "zoom": false,
                                        "zoomPixels": 100,
                                      },
                                      "config": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "liveConfig": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "mobile": Object {
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "panel": Object {
                                        "canLinkExternalContent": false,
                                        "height": 300,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "videoOverlay": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                    },
                                    "whitelistedConfigUrls": Array [
                                      "foo",
                                    ],
                                    "whitelistedPanelUrls": Array [
                                      "bar",
                                    ],
                                  }
            }
            frameId="frameid-0"
            installationAbilities={
                        Object {
                                    "isChatEnabled": true,
                                  }
            }
            isPopout={false}
            mode="viewer"
            type="panel"
/>,
          "className": "view",
          "style": Object {
            "height": "300px",
            "width": "320px",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bindIframeToParent": [Function],
            "channelId": "twitch",
            "className": "view",
            "extension": Object {
              "authorName": "test",
              "bitsEnabled": false,
              "clientId": "mockClientId",
              "description": "description",
              "iconUrl": "iconUrl",
              "iconUrls": Object {
                "square100": "100x100",
              },
              "id": "id",
              "name": "name",
              "requestIdentityLink": false,
              "sku": "sku",
              "state": "Released",
              "summary": "summary",
              "token": "token",
              "vendorCode": "vendorCode",
              "version": "0.1",
              "views": Object {
                "component": Object {
                  "aspectHeight": 3000,
                  "aspectWidth": 2500,
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                  "zoom": false,
                  "zoomPixels": 100,
                },
                "config": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "liveConfig": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "mobile": Object {
                  "viewerUrl": "https://test:8080",
                },
                "panel": Object {
                  "canLinkExternalContent": false,
                  "height": 300,
                  "viewerUrl": "https://test:8080",
                },
                "videoOverlay": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
              },
              "whitelistedConfigUrls": Array [
                "foo",
              ],
              "whitelistedPanelUrls": Array [
                "bar",
              ],
            },
            "frameId": "frameid-0",
            "installationAbilities": Object {
              "isChatEnabled": true,
            },
            "isPopout": false,
            "mode": "viewer",
            "type": "panel",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__header-container"
            >
                        <div
                                    className="view__descriptor"
                        >
                                    Logged-In Viewer
                                     Linked
                                     (test:8080)
                        </div>
            </div>
            <div
                        className="view__close_button"
                        onClick={[Function]}
            >
                        <img
                                    alt="Close"
                                    src="close_icon.png"
                        />
            </div>
</div>,
          <div
            className="view"
            style={
                        Object {
                                    "height": "300px",
                                    "width": "320px",
                                  }
            }
>
            <ExtensionFrame
                        bindIframeToParent={[Function]}
                        channelId="twitch"
                        className="view"
                        extension={
                                    Object {
                                                "authorName": "test",
                                                "bitsEnabled": false,
                                                "clientId": "mockClientId",
                                                "description": "description",
                                                "iconUrl": "iconUrl",
                                                "iconUrls": Object {
                                                  "square100": "100x100",
                                                },
                                                "id": "id",
                                                "name": "name",
                                                "requestIdentityLink": false,
                                                "sku": "sku",
                                                "state": "Released",
                                                "summary": "summary",
                                                "token": "token",
                                                "vendorCode": "vendorCode",
                                                "version": "0.1",
                                                "views": Object {
                                                  "component": Object {
                                                    "aspectHeight": 3000,
                                                    "aspectWidth": 2500,
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                    "zoom": false,
                                                    "zoomPixels": 100,
                                                  },
                                                  "config": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "liveConfig": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "mobile": Object {
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "panel": Object {
                                                    "canLinkExternalContent": false,
                                                    "height": 300,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "videoOverlay": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                },
                                                "whitelistedConfigUrls": Array [
                                                  "foo",
                                                ],
                                                "whitelistedPanelUrls": Array [
                                                  "bar",
                                                ],
                                              }
                        }
                        frameId="frameid-0"
                        installationAbilities={
                                    Object {
                                                "isChatEnabled": true,
                                              }
                        }
                        isPopout={false}
                        mode="viewer"
                        type="panel"
            />
</div>,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": Object {},
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="view__header-container"
>
                <div
                                className="view__descriptor"
                >
                                Logged-In Viewer
                                 Linked
                                 (test:8080)
                </div>
</div>,
              <div
                className="view__close_button"
                onClick={[Function]}
>
                <img
                                alt="Close"
                                src="close_icon.png"
                />
</div>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="view__descriptor"
>
                    Logged-In Viewer
                     Linked
                     (test:8080)
</div>,
                  false,
                  false,
                ],
                "className": "view__header-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Logged-In Viewer",
                      " Linked",
                      null,
                      " (test:8080)",
                    ],
                    "className": "view__descriptor",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Logged-In Viewer",
                    " Linked",
                    null,
                    " (test:8080)",
                  ],
                  "type": "div",
                },
                false,
                false,
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  alt="Close"
                  src="close_icon.png"
/>,
                "className": "view__close_button",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Close",
                  "src": "close_icon.png",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ExtensionFrame
              bindIframeToParent={[Function]}
              channelId="twitch"
              className="view"
              extension={
                            Object {
                                          "authorName": "test",
                                          "bitsEnabled": false,
                                          "clientId": "mockClientId",
                                          "description": "description",
                                          "iconUrl": "iconUrl",
                                          "iconUrls": Object {
                                            "square100": "100x100",
                                          },
                                          "id": "id",
                                          "name": "name",
                                          "requestIdentityLink": false,
                                          "sku": "sku",
                                          "state": "Released",
                                          "summary": "summary",
                                          "token": "token",
                                          "vendorCode": "vendorCode",
                                          "version": "0.1",
                                          "views": Object {
                                            "component": Object {
                                              "aspectHeight": 3000,
                                              "aspectWidth": 2500,
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                              "zoom": false,
                                              "zoomPixels": 100,
                                            },
                                            "config": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "liveConfig": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "mobile": Object {
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "panel": Object {
                                              "canLinkExternalContent": false,
                                              "height": 300,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "videoOverlay": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                          },
                                          "whitelistedConfigUrls": Array [
                                            "foo",
                                          ],
                                          "whitelistedPanelUrls": Array [
                                            "bar",
                                          ],
                                        }
              }
              frameId="frameid-0"
              installationAbilities={
                            Object {
                                          "isChatEnabled": true,
                                        }
              }
              isPopout={false}
              mode="viewer"
              type="panel"
/>,
            "className": "view",
            "style": Object {
              "height": "300px",
              "width": "320px",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bindIframeToParent": [Function],
              "channelId": "twitch",
              "className": "view",
              "extension": Object {
                "authorName": "test",
                "bitsEnabled": false,
                "clientId": "mockClientId",
                "description": "description",
                "iconUrl": "iconUrl",
                "iconUrls": Object {
                  "square100": "100x100",
                },
                "id": "id",
                "name": "name",
                "requestIdentityLink": false,
                "sku": "sku",
                "state": "Released",
                "summary": "summary",
                "token": "token",
                "vendorCode": "vendorCode",
                "version": "0.1",
                "views": Object {
                  "component": Object {
                    "aspectHeight": 3000,
                    "aspectWidth": 2500,
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                    "zoom": false,
                    "zoomPixels": 100,
                  },
                  "config": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                  "liveConfig": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                  "mobile": Object {
                    "viewerUrl": "https://test:8080",
                  },
                  "panel": Object {
                    "canLinkExternalContent": false,
                    "height": 300,
                    "viewerUrl": "https://test:8080",
                  },
                  "videoOverlay": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                },
                "whitelistedConfigUrls": Array [
                  "foo",
                ],
                "whitelistedPanelUrls": Array [
                  "bar",
                ],
              },
              "frameId": "frameid-0",
              "installationAbilities": Object {
                "isChatEnabled": true,
              },
              "isPopout": false,
              "mode": "viewer",
              "type": "panel",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> overlay mode views renders correctly when in overlay mode as a Logged In and Unlinked Viewer 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    channelId="twitch"
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "bitsEnabled": false,
            "clientId": "mockClientId",
            "description": "description",
            "iconUrl": "iconUrl",
            "iconUrls": Object {
              "square100": "100x100",
            },
            "id": "id",
            "name": "name",
            "requestIdentityLink": false,
            "sku": "sku",
            "state": "Released",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
                "zoom": false,
                "zoomPixels": 100,
              },
              "config": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "liveConfig": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "mobile": Object {
                "viewerUrl": "https://test:8080",
              },
              "panel": Object {
                "canLinkExternalContent": false,
                "height": 300,
                "viewerUrl": "https://test:8080",
              },
              "videoOverlay": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": 1,
            "width": 1,
          }
    }
    id="0"
    iframe=""
    installationAbilities={
        Object {
            "isChatEnabled": true,
          }
    }
    isLocal={true}
    isPopout={false}
    linked={false}
    mockApiEnabled={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Logged-In Viewer"
    type="panel"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__header-container"
          >
                    <div
                              className="view__descriptor"
                    >
                              Logged-In Viewer
                               Unlinked
                               (test:8080)
                    </div>
          </div>
          <div
                    className="view__close_button"
                    onClick={[Function]}
          >
                    <img
                              alt="Close"
                              src="close_icon.png"
                    />
          </div>
</div>,
        <div
          className="view"
          style={
                    Object {
                              "height": "300px",
                              "width": "320px",
                            }
          }
>
          <ExtensionFrame
                    bindIframeToParent={[Function]}
                    channelId="twitch"
                    className="view"
                    extension={
                              Object {
                                        "authorName": "test",
                                        "bitsEnabled": false,
                                        "clientId": "mockClientId",
                                        "description": "description",
                                        "iconUrl": "iconUrl",
                                        "iconUrls": Object {
                                          "square100": "100x100",
                                        },
                                        "id": "id",
                                        "name": "name",
                                        "requestIdentityLink": false,
                                        "sku": "sku",
                                        "state": "Released",
                                        "summary": "summary",
                                        "token": "token",
                                        "vendorCode": "vendorCode",
                                        "version": "0.1",
                                        "views": Object {
                                          "component": Object {
                                            "aspectHeight": 3000,
                                            "aspectWidth": 2500,
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                            "zoom": false,
                                            "zoomPixels": 100,
                                          },
                                          "config": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "liveConfig": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "mobile": Object {
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "panel": Object {
                                            "canLinkExternalContent": false,
                                            "height": 300,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "videoOverlay": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                        },
                                        "whitelistedConfigUrls": Array [
                                          "foo",
                                        ],
                                        "whitelistedPanelUrls": Array [
                                          "bar",
                                        ],
                                      }
                    }
                    frameId="frameid-0"
                    installationAbilities={
                              Object {
                                        "isChatEnabled": true,
                                      }
                    }
                    isPopout={false}
                    mode="viewer"
                    type="panel"
          />
</div>,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": Object {},
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="view__header-container"
>
              <div
                            className="view__descriptor"
              >
                            Logged-In Viewer
                             Unlinked
                             (test:8080)
              </div>
</div>,
            <div
              className="view__close_button"
              onClick={[Function]}
>
              <img
                            alt="Close"
                            src="close_icon.png"
              />
</div>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="view__descriptor"
>
                  Logged-In Viewer
                   Unlinked
                   (test:8080)
</div>,
                false,
                false,
              ],
              "className": "view__header-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Logged-In Viewer",
                    " Unlinked",
                    null,
                    " (test:8080)",
                  ],
                  "className": "view__descriptor",
                },
                "ref": null,
                "rendered": Array [
                  "Logged-In Viewer",
                  " Unlinked",
                  null,
                  " (test:8080)",
                ],
                "type": "div",
              },
              false,
              false,
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt="Close"
                src="close_icon.png"
/>,
              "className": "view__close_button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Close",
                "src": "close_icon.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ExtensionFrame
            bindIframeToParent={[Function]}
            channelId="twitch"
            className="view"
            extension={
                        Object {
                                    "authorName": "test",
                                    "bitsEnabled": false,
                                    "clientId": "mockClientId",
                                    "description": "description",
                                    "iconUrl": "iconUrl",
                                    "iconUrls": Object {
                                      "square100": "100x100",
                                    },
                                    "id": "id",
                                    "name": "name",
                                    "requestIdentityLink": false,
                                    "sku": "sku",
                                    "state": "Released",
                                    "summary": "summary",
                                    "token": "token",
                                    "vendorCode": "vendorCode",
                                    "version": "0.1",
                                    "views": Object {
                                      "component": Object {
                                        "aspectHeight": 3000,
                                        "aspectWidth": 2500,
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                        "zoom": false,
                                        "zoomPixels": 100,
                                      },
                                      "config": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "liveConfig": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "mobile": Object {
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "panel": Object {
                                        "canLinkExternalContent": false,
                                        "height": 300,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "videoOverlay": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                    },
                                    "whitelistedConfigUrls": Array [
                                      "foo",
                                    ],
                                    "whitelistedPanelUrls": Array [
                                      "bar",
                                    ],
                                  }
            }
            frameId="frameid-0"
            installationAbilities={
                        Object {
                                    "isChatEnabled": true,
                                  }
            }
            isPopout={false}
            mode="viewer"
            type="panel"
/>,
          "className": "view",
          "style": Object {
            "height": "300px",
            "width": "320px",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bindIframeToParent": [Function],
            "channelId": "twitch",
            "className": "view",
            "extension": Object {
              "authorName": "test",
              "bitsEnabled": false,
              "clientId": "mockClientId",
              "description": "description",
              "iconUrl": "iconUrl",
              "iconUrls": Object {
                "square100": "100x100",
              },
              "id": "id",
              "name": "name",
              "requestIdentityLink": false,
              "sku": "sku",
              "state": "Released",
              "summary": "summary",
              "token": "token",
              "vendorCode": "vendorCode",
              "version": "0.1",
              "views": Object {
                "component": Object {
                  "aspectHeight": 3000,
                  "aspectWidth": 2500,
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                  "zoom": false,
                  "zoomPixels": 100,
                },
                "config": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "liveConfig": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "mobile": Object {
                  "viewerUrl": "https://test:8080",
                },
                "panel": Object {
                  "canLinkExternalContent": false,
                  "height": 300,
                  "viewerUrl": "https://test:8080",
                },
                "videoOverlay": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
              },
              "whitelistedConfigUrls": Array [
                "foo",
              ],
              "whitelistedPanelUrls": Array [
                "bar",
              ],
            },
            "frameId": "frameid-0",
            "installationAbilities": Object {
              "isChatEnabled": true,
            },
            "isPopout": false,
            "mode": "viewer",
            "type": "panel",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__header-container"
            >
                        <div
                                    className="view__descriptor"
                        >
                                    Logged-In Viewer
                                     Unlinked
                                     (test:8080)
                        </div>
            </div>
            <div
                        className="view__close_button"
                        onClick={[Function]}
            >
                        <img
                                    alt="Close"
                                    src="close_icon.png"
                        />
            </div>
</div>,
          <div
            className="view"
            style={
                        Object {
                                    "height": "300px",
                                    "width": "320px",
                                  }
            }
>
            <ExtensionFrame
                        bindIframeToParent={[Function]}
                        channelId="twitch"
                        className="view"
                        extension={
                                    Object {
                                                "authorName": "test",
                                                "bitsEnabled": false,
                                                "clientId": "mockClientId",
                                                "description": "description",
                                                "iconUrl": "iconUrl",
                                                "iconUrls": Object {
                                                  "square100": "100x100",
                                                },
                                                "id": "id",
                                                "name": "name",
                                                "requestIdentityLink": false,
                                                "sku": "sku",
                                                "state": "Released",
                                                "summary": "summary",
                                                "token": "token",
                                                "vendorCode": "vendorCode",
                                                "version": "0.1",
                                                "views": Object {
                                                  "component": Object {
                                                    "aspectHeight": 3000,
                                                    "aspectWidth": 2500,
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                    "zoom": false,
                                                    "zoomPixels": 100,
                                                  },
                                                  "config": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "liveConfig": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "mobile": Object {
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "panel": Object {
                                                    "canLinkExternalContent": false,
                                                    "height": 300,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "videoOverlay": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                },
                                                "whitelistedConfigUrls": Array [
                                                  "foo",
                                                ],
                                                "whitelistedPanelUrls": Array [
                                                  "bar",
                                                ],
                                              }
                        }
                        frameId="frameid-0"
                        installationAbilities={
                                    Object {
                                                "isChatEnabled": true,
                                              }
                        }
                        isPopout={false}
                        mode="viewer"
                        type="panel"
            />
</div>,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": Object {},
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="view__header-container"
>
                <div
                                className="view__descriptor"
                >
                                Logged-In Viewer
                                 Unlinked
                                 (test:8080)
                </div>
</div>,
              <div
                className="view__close_button"
                onClick={[Function]}
>
                <img
                                alt="Close"
                                src="close_icon.png"
                />
</div>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="view__descriptor"
>
                    Logged-In Viewer
                     Unlinked
                     (test:8080)
</div>,
                  false,
                  false,
                ],
                "className": "view__header-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Logged-In Viewer",
                      " Unlinked",
                      null,
                      " (test:8080)",
                    ],
                    "className": "view__descriptor",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Logged-In Viewer",
                    " Unlinked",
                    null,
                    " (test:8080)",
                  ],
                  "type": "div",
                },
                false,
                false,
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  alt="Close"
                  src="close_icon.png"
/>,
                "className": "view__close_button",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Close",
                  "src": "close_icon.png",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ExtensionFrame
              bindIframeToParent={[Function]}
              channelId="twitch"
              className="view"
              extension={
                            Object {
                                          "authorName": "test",
                                          "bitsEnabled": false,
                                          "clientId": "mockClientId",
                                          "description": "description",
                                          "iconUrl": "iconUrl",
                                          "iconUrls": Object {
                                            "square100": "100x100",
                                          },
                                          "id": "id",
                                          "name": "name",
                                          "requestIdentityLink": false,
                                          "sku": "sku",
                                          "state": "Released",
                                          "summary": "summary",
                                          "token": "token",
                                          "vendorCode": "vendorCode",
                                          "version": "0.1",
                                          "views": Object {
                                            "component": Object {
                                              "aspectHeight": 3000,
                                              "aspectWidth": 2500,
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                              "zoom": false,
                                              "zoomPixels": 100,
                                            },
                                            "config": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "liveConfig": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "mobile": Object {
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "panel": Object {
                                              "canLinkExternalContent": false,
                                              "height": 300,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "videoOverlay": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                          },
                                          "whitelistedConfigUrls": Array [
                                            "foo",
                                          ],
                                          "whitelistedPanelUrls": Array [
                                            "bar",
                                          ],
                                        }
              }
              frameId="frameid-0"
              installationAbilities={
                            Object {
                                          "isChatEnabled": true,
                                        }
              }
              isPopout={false}
              mode="viewer"
              type="panel"
/>,
            "className": "view",
            "style": Object {
              "height": "300px",
              "width": "320px",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bindIframeToParent": [Function],
              "channelId": "twitch",
              "className": "view",
              "extension": Object {
                "authorName": "test",
                "bitsEnabled": false,
                "clientId": "mockClientId",
                "description": "description",
                "iconUrl": "iconUrl",
                "iconUrls": Object {
                  "square100": "100x100",
                },
                "id": "id",
                "name": "name",
                "requestIdentityLink": false,
                "sku": "sku",
                "state": "Released",
                "summary": "summary",
                "token": "token",
                "vendorCode": "vendorCode",
                "version": "0.1",
                "views": Object {
                  "component": Object {
                    "aspectHeight": 3000,
                    "aspectWidth": 2500,
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                    "zoom": false,
                    "zoomPixels": 100,
                  },
                  "config": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                  "liveConfig": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                  "mobile": Object {
                    "viewerUrl": "https://test:8080",
                  },
                  "panel": Object {
                    "canLinkExternalContent": false,
                    "height": 300,
                    "viewerUrl": "https://test:8080",
                  },
                  "videoOverlay": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                },
                "whitelistedConfigUrls": Array [
                  "foo",
                ],
                "whitelistedPanelUrls": Array [
                  "bar",
                ],
              },
              "frameId": "frameid-0",
              "installationAbilities": Object {
                "isChatEnabled": true,
              },
              "isPopout": false,
              "mode": "viewer",
              "type": "panel",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> overlay mode views renders correctly when in overlay mode as a Logged Out 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    channelId="twitch"
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "bitsEnabled": false,
            "clientId": "mockClientId",
            "description": "description",
            "iconUrl": "iconUrl",
            "iconUrls": Object {
              "square100": "100x100",
            },
            "id": "id",
            "name": "name",
            "requestIdentityLink": false,
            "sku": "sku",
            "state": "Released",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
                "zoom": false,
                "zoomPixels": 100,
              },
              "config": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "liveConfig": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "mobile": Object {
                "viewerUrl": "https://test:8080",
              },
              "panel": Object {
                "canLinkExternalContent": false,
                "height": 300,
                "viewerUrl": "https://test:8080",
              },
              "videoOverlay": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": 1,
            "width": 1,
          }
    }
    id="0"
    iframe=""
    installationAbilities={
        Object {
            "isChatEnabled": true,
          }
    }
    isLocal={true}
    isPopout={false}
    linked={false}
    mockApiEnabled={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Logged-Out Viewer"
    type="panel"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__header-container"
          >
                    <div
                              className="view__descriptor"
                    >
                              Logged-Out Viewer
                               (test:8080)
                    </div>
          </div>
          <div
                    className="view__close_button"
                    onClick={[Function]}
          >
                    <img
                              alt="Close"
                              src="close_icon.png"
                    />
          </div>
</div>,
        <div
          className="view"
          style={
                    Object {
                              "height": "300px",
                              "width": "320px",
                            }
          }
>
          <ExtensionFrame
                    bindIframeToParent={[Function]}
                    channelId="twitch"
                    className="view"
                    extension={
                              Object {
                                        "authorName": "test",
                                        "bitsEnabled": false,
                                        "clientId": "mockClientId",
                                        "description": "description",
                                        "iconUrl": "iconUrl",
                                        "iconUrls": Object {
                                          "square100": "100x100",
                                        },
                                        "id": "id",
                                        "name": "name",
                                        "requestIdentityLink": false,
                                        "sku": "sku",
                                        "state": "Released",
                                        "summary": "summary",
                                        "token": "token",
                                        "vendorCode": "vendorCode",
                                        "version": "0.1",
                                        "views": Object {
                                          "component": Object {
                                            "aspectHeight": 3000,
                                            "aspectWidth": 2500,
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                            "zoom": false,
                                            "zoomPixels": 100,
                                          },
                                          "config": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "liveConfig": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "mobile": Object {
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "panel": Object {
                                            "canLinkExternalContent": false,
                                            "height": 300,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "videoOverlay": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                        },
                                        "whitelistedConfigUrls": Array [
                                          "foo",
                                        ],
                                        "whitelistedPanelUrls": Array [
                                          "bar",
                                        ],
                                      }
                    }
                    frameId="frameid-0"
                    installationAbilities={
                              Object {
                                        "isChatEnabled": true,
                                      }
                    }
                    isPopout={false}
                    mode="viewer"
                    type="panel"
          />
</div>,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": Object {},
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="view__header-container"
>
              <div
                            className="view__descriptor"
              >
                            Logged-Out Viewer
                             (test:8080)
              </div>
</div>,
            <div
              className="view__close_button"
              onClick={[Function]}
>
              <img
                            alt="Close"
                            src="close_icon.png"
              />
</div>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="view__descriptor"
>
                  Logged-Out Viewer
                   (test:8080)
</div>,
                false,
                false,
              ],
              "className": "view__header-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Logged-Out Viewer",
                    null,
                    null,
                    " (test:8080)",
                  ],
                  "className": "view__descriptor",
                },
                "ref": null,
                "rendered": Array [
                  "Logged-Out Viewer",
                  null,
                  null,
                  " (test:8080)",
                ],
                "type": "div",
              },
              false,
              false,
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt="Close"
                src="close_icon.png"
/>,
              "className": "view__close_button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Close",
                "src": "close_icon.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ExtensionFrame
            bindIframeToParent={[Function]}
            channelId="twitch"
            className="view"
            extension={
                        Object {
                                    "authorName": "test",
                                    "bitsEnabled": false,
                                    "clientId": "mockClientId",
                                    "description": "description",
                                    "iconUrl": "iconUrl",
                                    "iconUrls": Object {
                                      "square100": "100x100",
                                    },
                                    "id": "id",
                                    "name": "name",
                                    "requestIdentityLink": false,
                                    "sku": "sku",
                                    "state": "Released",
                                    "summary": "summary",
                                    "token": "token",
                                    "vendorCode": "vendorCode",
                                    "version": "0.1",
                                    "views": Object {
                                      "component": Object {
                                        "aspectHeight": 3000,
                                        "aspectWidth": 2500,
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                        "zoom": false,
                                        "zoomPixels": 100,
                                      },
                                      "config": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "liveConfig": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "mobile": Object {
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "panel": Object {
                                        "canLinkExternalContent": false,
                                        "height": 300,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "videoOverlay": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                    },
                                    "whitelistedConfigUrls": Array [
                                      "foo",
                                    ],
                                    "whitelistedPanelUrls": Array [
                                      "bar",
                                    ],
                                  }
            }
            frameId="frameid-0"
            installationAbilities={
                        Object {
                                    "isChatEnabled": true,
                                  }
            }
            isPopout={false}
            mode="viewer"
            type="panel"
/>,
          "className": "view",
          "style": Object {
            "height": "300px",
            "width": "320px",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bindIframeToParent": [Function],
            "channelId": "twitch",
            "className": "view",
            "extension": Object {
              "authorName": "test",
              "bitsEnabled": false,
              "clientId": "mockClientId",
              "description": "description",
              "iconUrl": "iconUrl",
              "iconUrls": Object {
                "square100": "100x100",
              },
              "id": "id",
              "name": "name",
              "requestIdentityLink": false,
              "sku": "sku",
              "state": "Released",
              "summary": "summary",
              "token": "token",
              "vendorCode": "vendorCode",
              "version": "0.1",
              "views": Object {
                "component": Object {
                  "aspectHeight": 3000,
                  "aspectWidth": 2500,
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                  "zoom": false,
                  "zoomPixels": 100,
                },
                "config": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "liveConfig": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "mobile": Object {
                  "viewerUrl": "https://test:8080",
                },
                "panel": Object {
                  "canLinkExternalContent": false,
                  "height": 300,
                  "viewerUrl": "https://test:8080",
                },
                "videoOverlay": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
              },
              "whitelistedConfigUrls": Array [
                "foo",
              ],
              "whitelistedPanelUrls": Array [
                "bar",
              ],
            },
            "frameId": "frameid-0",
            "installationAbilities": Object {
              "isChatEnabled": true,
            },
            "isPopout": false,
            "mode": "viewer",
            "type": "panel",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__header-container"
            >
                        <div
                                    className="view__descriptor"
                        >
                                    Logged-Out Viewer
                                     (test:8080)
                        </div>
            </div>
            <div
                        className="view__close_button"
                        onClick={[Function]}
            >
                        <img
                                    alt="Close"
                                    src="close_icon.png"
                        />
            </div>
</div>,
          <div
            className="view"
            style={
                        Object {
                                    "height": "300px",
                                    "width": "320px",
                                  }
            }
>
            <ExtensionFrame
                        bindIframeToParent={[Function]}
                        channelId="twitch"
                        className="view"
                        extension={
                                    Object {
                                                "authorName": "test",
                                                "bitsEnabled": false,
                                                "clientId": "mockClientId",
                                                "description": "description",
                                                "iconUrl": "iconUrl",
                                                "iconUrls": Object {
                                                  "square100": "100x100",
                                                },
                                                "id": "id",
                                                "name": "name",
                                                "requestIdentityLink": false,
                                                "sku": "sku",
                                                "state": "Released",
                                                "summary": "summary",
                                                "token": "token",
                                                "vendorCode": "vendorCode",
                                                "version": "0.1",
                                                "views": Object {
                                                  "component": Object {
                                                    "aspectHeight": 3000,
                                                    "aspectWidth": 2500,
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                    "zoom": false,
                                                    "zoomPixels": 100,
                                                  },
                                                  "config": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "liveConfig": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "mobile": Object {
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "panel": Object {
                                                    "canLinkExternalContent": false,
                                                    "height": 300,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "videoOverlay": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                },
                                                "whitelistedConfigUrls": Array [
                                                  "foo",
                                                ],
                                                "whitelistedPanelUrls": Array [
                                                  "bar",
                                                ],
                                              }
                        }
                        frameId="frameid-0"
                        installationAbilities={
                                    Object {
                                                "isChatEnabled": true,
                                              }
                        }
                        isPopout={false}
                        mode="viewer"
                        type="panel"
            />
</div>,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": Object {},
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="view__header-container"
>
                <div
                                className="view__descriptor"
                >
                                Logged-Out Viewer
                                 (test:8080)
                </div>
</div>,
              <div
                className="view__close_button"
                onClick={[Function]}
>
                <img
                                alt="Close"
                                src="close_icon.png"
                />
</div>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="view__descriptor"
>
                    Logged-Out Viewer
                     (test:8080)
</div>,
                  false,
                  false,
                ],
                "className": "view__header-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Logged-Out Viewer",
                      null,
                      null,
                      " (test:8080)",
                    ],
                    "className": "view__descriptor",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Logged-Out Viewer",
                    null,
                    null,
                    " (test:8080)",
                  ],
                  "type": "div",
                },
                false,
                false,
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  alt="Close"
                  src="close_icon.png"
/>,
                "className": "view__close_button",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Close",
                  "src": "close_icon.png",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ExtensionFrame
              bindIframeToParent={[Function]}
              channelId="twitch"
              className="view"
              extension={
                            Object {
                                          "authorName": "test",
                                          "bitsEnabled": false,
                                          "clientId": "mockClientId",
                                          "description": "description",
                                          "iconUrl": "iconUrl",
                                          "iconUrls": Object {
                                            "square100": "100x100",
                                          },
                                          "id": "id",
                                          "name": "name",
                                          "requestIdentityLink": false,
                                          "sku": "sku",
                                          "state": "Released",
                                          "summary": "summary",
                                          "token": "token",
                                          "vendorCode": "vendorCode",
                                          "version": "0.1",
                                          "views": Object {
                                            "component": Object {
                                              "aspectHeight": 3000,
                                              "aspectWidth": 2500,
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                              "zoom": false,
                                              "zoomPixels": 100,
                                            },
                                            "config": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "liveConfig": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "mobile": Object {
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "panel": Object {
                                              "canLinkExternalContent": false,
                                              "height": 300,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "videoOverlay": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                          },
                                          "whitelistedConfigUrls": Array [
                                            "foo",
                                          ],
                                          "whitelistedPanelUrls": Array [
                                            "bar",
                                          ],
                                        }
              }
              frameId="frameid-0"
              installationAbilities={
                            Object {
                                          "isChatEnabled": true,
                                        }
              }
              isPopout={false}
              mode="viewer"
              type="panel"
/>,
            "className": "view",
            "style": Object {
              "height": "300px",
              "width": "320px",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bindIframeToParent": [Function],
              "channelId": "twitch",
              "className": "view",
              "extension": Object {
                "authorName": "test",
                "bitsEnabled": false,
                "clientId": "mockClientId",
                "description": "description",
                "iconUrl": "iconUrl",
                "iconUrls": Object {
                  "square100": "100x100",
                },
                "id": "id",
                "name": "name",
                "requestIdentityLink": false,
                "sku": "sku",
                "state": "Released",
                "summary": "summary",
                "token": "token",
                "vendorCode": "vendorCode",
                "version": "0.1",
                "views": Object {
                  "component": Object {
                    "aspectHeight": 3000,
                    "aspectWidth": 2500,
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                    "zoom": false,
                    "zoomPixels": 100,
                  },
                  "config": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                  "liveConfig": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                  "mobile": Object {
                    "viewerUrl": "https://test:8080",
                  },
                  "panel": Object {
                    "canLinkExternalContent": false,
                    "height": 300,
                    "viewerUrl": "https://test:8080",
                  },
                  "videoOverlay": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                },
                "whitelistedConfigUrls": Array [
                  "foo",
                ],
                "whitelistedPanelUrls": Array [
                  "bar",
                ],
              },
              "frameId": "frameid-0",
              "installationAbilities": Object {
                "isChatEnabled": true,
              },
              "isPopout": false,
              "mode": "viewer",
              "type": "panel",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> panel mode views renders correctly when in panel mode as a Broadcaster 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    channelId="twitch"
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "bitsEnabled": false,
            "clientId": "mockClientId",
            "description": "description",
            "iconUrl": "iconUrl",
            "iconUrls": Object {
              "square100": "100x100",
            },
            "id": "id",
            "name": "name",
            "requestIdentityLink": false,
            "sku": "sku",
            "state": "Released",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
                "zoom": false,
                "zoomPixels": 100,
              },
              "config": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "liveConfig": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "mobile": Object {
                "viewerUrl": "https://test:8080",
              },
              "panel": Object {
                "canLinkExternalContent": false,
                "height": 300,
                "viewerUrl": "https://test:8080",
              },
              "videoOverlay": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": 0,
            "width": 0,
          }
    }
    id="0"
    iframe=""
    installationAbilities={
        Object {
            "isChatEnabled": true,
          }
    }
    isLocal={true}
    isPopout={false}
    linked={false}
    mockApiEnabled={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Broadcaster"
    type="panel"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__header-container"
          >
                    <div
                              className="view__descriptor"
                    >
                              Broadcaster
                               (test:8080)
                    </div>
          </div>
          <div
                    className="view__close_button"
                    onClick={[Function]}
          >
                    <img
                              alt="Close"
                              src="close_icon.png"
                    />
          </div>
</div>,
        <div
          className="view"
          style={
                    Object {
                              "height": "300px",
                              "width": "320px",
                            }
          }
>
          <ExtensionFrame
                    bindIframeToParent={[Function]}
                    channelId="twitch"
                    className="view"
                    extension={
                              Object {
                                        "authorName": "test",
                                        "bitsEnabled": false,
                                        "clientId": "mockClientId",
                                        "description": "description",
                                        "iconUrl": "iconUrl",
                                        "iconUrls": Object {
                                          "square100": "100x100",
                                        },
                                        "id": "id",
                                        "name": "name",
                                        "requestIdentityLink": false,
                                        "sku": "sku",
                                        "state": "Released",
                                        "summary": "summary",
                                        "token": "token",
                                        "vendorCode": "vendorCode",
                                        "version": "0.1",
                                        "views": Object {
                                          "component": Object {
                                            "aspectHeight": 3000,
                                            "aspectWidth": 2500,
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                            "zoom": false,
                                            "zoomPixels": 100,
                                          },
                                          "config": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "liveConfig": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "mobile": Object {
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "panel": Object {
                                            "canLinkExternalContent": false,
                                            "height": 300,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "videoOverlay": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                        },
                                        "whitelistedConfigUrls": Array [
                                          "foo",
                                        ],
                                        "whitelistedPanelUrls": Array [
                                          "bar",
                                        ],
                                      }
                    }
                    frameId="frameid-0"
                    installationAbilities={
                              Object {
                                        "isChatEnabled": true,
                                      }
                    }
                    isPopout={false}
                    mode="viewer"
                    type="panel"
          />
</div>,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": Object {},
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="view__header-container"
>
              <div
                            className="view__descriptor"
              >
                            Broadcaster
                             (test:8080)
              </div>
</div>,
            <div
              className="view__close_button"
              onClick={[Function]}
>
              <img
                            alt="Close"
                            src="close_icon.png"
              />
</div>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="view__descriptor"
>
                  Broadcaster
                   (test:8080)
</div>,
                false,
                false,
              ],
              "className": "view__header-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Broadcaster",
                    null,
                    null,
                    " (test:8080)",
                  ],
                  "className": "view__descriptor",
                },
                "ref": null,
                "rendered": Array [
                  "Broadcaster",
                  null,
                  null,
                  " (test:8080)",
                ],
                "type": "div",
              },
              false,
              false,
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt="Close"
                src="close_icon.png"
/>,
              "className": "view__close_button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Close",
                "src": "close_icon.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ExtensionFrame
            bindIframeToParent={[Function]}
            channelId="twitch"
            className="view"
            extension={
                        Object {
                                    "authorName": "test",
                                    "bitsEnabled": false,
                                    "clientId": "mockClientId",
                                    "description": "description",
                                    "iconUrl": "iconUrl",
                                    "iconUrls": Object {
                                      "square100": "100x100",
                                    },
                                    "id": "id",
                                    "name": "name",
                                    "requestIdentityLink": false,
                                    "sku": "sku",
                                    "state": "Released",
                                    "summary": "summary",
                                    "token": "token",
                                    "vendorCode": "vendorCode",
                                    "version": "0.1",
                                    "views": Object {
                                      "component": Object {
                                        "aspectHeight": 3000,
                                        "aspectWidth": 2500,
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                        "zoom": false,
                                        "zoomPixels": 100,
                                      },
                                      "config": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "liveConfig": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "mobile": Object {
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "panel": Object {
                                        "canLinkExternalContent": false,
                                        "height": 300,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "videoOverlay": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                    },
                                    "whitelistedConfigUrls": Array [
                                      "foo",
                                    ],
                                    "whitelistedPanelUrls": Array [
                                      "bar",
                                    ],
                                  }
            }
            frameId="frameid-0"
            installationAbilities={
                        Object {
                                    "isChatEnabled": true,
                                  }
            }
            isPopout={false}
            mode="viewer"
            type="panel"
/>,
          "className": "view",
          "style": Object {
            "height": "300px",
            "width": "320px",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bindIframeToParent": [Function],
            "channelId": "twitch",
            "className": "view",
            "extension": Object {
              "authorName": "test",
              "bitsEnabled": false,
              "clientId": "mockClientId",
              "description": "description",
              "iconUrl": "iconUrl",
              "iconUrls": Object {
                "square100": "100x100",
              },
              "id": "id",
              "name": "name",
              "requestIdentityLink": false,
              "sku": "sku",
              "state": "Released",
              "summary": "summary",
              "token": "token",
              "vendorCode": "vendorCode",
              "version": "0.1",
              "views": Object {
                "component": Object {
                  "aspectHeight": 3000,
                  "aspectWidth": 2500,
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                  "zoom": false,
                  "zoomPixels": 100,
                },
                "config": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "liveConfig": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "mobile": Object {
                  "viewerUrl": "https://test:8080",
                },
                "panel": Object {
                  "canLinkExternalContent": false,
                  "height": 300,
                  "viewerUrl": "https://test:8080",
                },
                "videoOverlay": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
              },
              "whitelistedConfigUrls": Array [
                "foo",
              ],
              "whitelistedPanelUrls": Array [
                "bar",
              ],
            },
            "frameId": "frameid-0",
            "installationAbilities": Object {
              "isChatEnabled": true,
            },
            "isPopout": false,
            "mode": "viewer",
            "type": "panel",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__header-container"
            >
                        <div
                                    className="view__descriptor"
                        >
                                    Broadcaster
                                     (test:8080)
                        </div>
            </div>
            <div
                        className="view__close_button"
                        onClick={[Function]}
            >
                        <img
                                    alt="Close"
                                    src="close_icon.png"
                        />
            </div>
</div>,
          <div
            className="view"
            style={
                        Object {
                                    "height": "300px",
                                    "width": "320px",
                                  }
            }
>
            <ExtensionFrame
                        bindIframeToParent={[Function]}
                        channelId="twitch"
                        className="view"
                        extension={
                                    Object {
                                                "authorName": "test",
                                                "bitsEnabled": false,
                                                "clientId": "mockClientId",
                                                "description": "description",
                                                "iconUrl": "iconUrl",
                                                "iconUrls": Object {
                                                  "square100": "100x100",
                                                },
                                                "id": "id",
                                                "name": "name",
                                                "requestIdentityLink": false,
                                                "sku": "sku",
                                                "state": "Released",
                                                "summary": "summary",
                                                "token": "token",
                                                "vendorCode": "vendorCode",
                                                "version": "0.1",
                                                "views": Object {
                                                  "component": Object {
                                                    "aspectHeight": 3000,
                                                    "aspectWidth": 2500,
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                    "zoom": false,
                                                    "zoomPixels": 100,
                                                  },
                                                  "config": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "liveConfig": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "mobile": Object {
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "panel": Object {
                                                    "canLinkExternalContent": false,
                                                    "height": 300,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "videoOverlay": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                },
                                                "whitelistedConfigUrls": Array [
                                                  "foo",
                                                ],
                                                "whitelistedPanelUrls": Array [
                                                  "bar",
                                                ],
                                              }
                        }
                        frameId="frameid-0"
                        installationAbilities={
                                    Object {
                                                "isChatEnabled": true,
                                              }
                        }
                        isPopout={false}
                        mode="viewer"
                        type="panel"
            />
</div>,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": Object {},
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="view__header-container"
>
                <div
                                className="view__descriptor"
                >
                                Broadcaster
                                 (test:8080)
                </div>
</div>,
              <div
                className="view__close_button"
                onClick={[Function]}
>
                <img
                                alt="Close"
                                src="close_icon.png"
                />
</div>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="view__descriptor"
>
                    Broadcaster
                     (test:8080)
</div>,
                  false,
                  false,
                ],
                "className": "view__header-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Broadcaster",
                      null,
                      null,
                      " (test:8080)",
                    ],
                    "className": "view__descriptor",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Broadcaster",
                    null,
                    null,
                    " (test:8080)",
                  ],
                  "type": "div",
                },
                false,
                false,
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  alt="Close"
                  src="close_icon.png"
/>,
                "className": "view__close_button",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Close",
                  "src": "close_icon.png",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ExtensionFrame
              bindIframeToParent={[Function]}
              channelId="twitch"
              className="view"
              extension={
                            Object {
                                          "authorName": "test",
                                          "bitsEnabled": false,
                                          "clientId": "mockClientId",
                                          "description": "description",
                                          "iconUrl": "iconUrl",
                                          "iconUrls": Object {
                                            "square100": "100x100",
                                          },
                                          "id": "id",
                                          "name": "name",
                                          "requestIdentityLink": false,
                                          "sku": "sku",
                                          "state": "Released",
                                          "summary": "summary",
                                          "token": "token",
                                          "vendorCode": "vendorCode",
                                          "version": "0.1",
                                          "views": Object {
                                            "component": Object {
                                              "aspectHeight": 3000,
                                              "aspectWidth": 2500,
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                              "zoom": false,
                                              "zoomPixels": 100,
                                            },
                                            "config": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "liveConfig": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "mobile": Object {
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "panel": Object {
                                              "canLinkExternalContent": false,
                                              "height": 300,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "videoOverlay": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                          },
                                          "whitelistedConfigUrls": Array [
                                            "foo",
                                          ],
                                          "whitelistedPanelUrls": Array [
                                            "bar",
                                          ],
                                        }
              }
              frameId="frameid-0"
              installationAbilities={
                            Object {
                                          "isChatEnabled": true,
                                        }
              }
              isPopout={false}
              mode="viewer"
              type="panel"
/>,
            "className": "view",
            "style": Object {
              "height": "300px",
              "width": "320px",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bindIframeToParent": [Function],
              "channelId": "twitch",
              "className": "view",
              "extension": Object {
                "authorName": "test",
                "bitsEnabled": false,
                "clientId": "mockClientId",
                "description": "description",
                "iconUrl": "iconUrl",
                "iconUrls": Object {
                  "square100": "100x100",
                },
                "id": "id",
                "name": "name",
                "requestIdentityLink": false,
                "sku": "sku",
                "state": "Released",
                "summary": "summary",
                "token": "token",
                "vendorCode": "vendorCode",
                "version": "0.1",
                "views": Object {
                  "component": Object {
                    "aspectHeight": 3000,
                    "aspectWidth": 2500,
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                    "zoom": false,
                    "zoomPixels": 100,
                  },
                  "config": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                  "liveConfig": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                  "mobile": Object {
                    "viewerUrl": "https://test:8080",
                  },
                  "panel": Object {
                    "canLinkExternalContent": false,
                    "height": 300,
                    "viewerUrl": "https://test:8080",
                  },
                  "videoOverlay": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                },
                "whitelistedConfigUrls": Array [
                  "foo",
                ],
                "whitelistedPanelUrls": Array [
                  "bar",
                ],
              },
              "frameId": "frameid-0",
              "installationAbilities": Object {
                "isChatEnabled": true,
              },
              "isPopout": false,
              "mode": "viewer",
              "type": "panel",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> panel mode views renders correctly when in panel mode as a Logged In and Linked Viewer 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    channelId="twitch"
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "bitsEnabled": false,
            "clientId": "mockClientId",
            "description": "description",
            "iconUrl": "iconUrl",
            "iconUrls": Object {
              "square100": "100x100",
            },
            "id": "id",
            "name": "name",
            "requestIdentityLink": false,
            "sku": "sku",
            "state": "Released",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
                "zoom": false,
                "zoomPixels": 100,
              },
              "config": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "liveConfig": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "mobile": Object {
                "viewerUrl": "https://test:8080",
              },
              "panel": Object {
                "canLinkExternalContent": false,
                "height": 300,
                "viewerUrl": "https://test:8080",
              },
              "videoOverlay": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": 0,
            "width": 0,
          }
    }
    id="0"
    iframe=""
    installationAbilities={
        Object {
            "isChatEnabled": true,
          }
    }
    isLocal={true}
    isPopout={false}
    linked={true}
    mockApiEnabled={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Logged-In Viewer"
    type="panel"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__header-container"
          >
                    <div
                              className="view__descriptor"
                    >
                              Logged-In Viewer
                               Linked
                               (test:8080)
                    </div>
          </div>
          <div
                    className="view__close_button"
                    onClick={[Function]}
          >
                    <img
                              alt="Close"
                              src="close_icon.png"
                    />
          </div>
</div>,
        <div
          className="view"
          style={
                    Object {
                              "height": "300px",
                              "width": "320px",
                            }
          }
>
          <ExtensionFrame
                    bindIframeToParent={[Function]}
                    channelId="twitch"
                    className="view"
                    extension={
                              Object {
                                        "authorName": "test",
                                        "bitsEnabled": false,
                                        "clientId": "mockClientId",
                                        "description": "description",
                                        "iconUrl": "iconUrl",
                                        "iconUrls": Object {
                                          "square100": "100x100",
                                        },
                                        "id": "id",
                                        "name": "name",
                                        "requestIdentityLink": false,
                                        "sku": "sku",
                                        "state": "Released",
                                        "summary": "summary",
                                        "token": "token",
                                        "vendorCode": "vendorCode",
                                        "version": "0.1",
                                        "views": Object {
                                          "component": Object {
                                            "aspectHeight": 3000,
                                            "aspectWidth": 2500,
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                            "zoom": false,
                                            "zoomPixels": 100,
                                          },
                                          "config": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "liveConfig": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "mobile": Object {
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "panel": Object {
                                            "canLinkExternalContent": false,
                                            "height": 300,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "videoOverlay": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                        },
                                        "whitelistedConfigUrls": Array [
                                          "foo",
                                        ],
                                        "whitelistedPanelUrls": Array [
                                          "bar",
                                        ],
                                      }
                    }
                    frameId="frameid-0"
                    installationAbilities={
                              Object {
                                        "isChatEnabled": true,
                                      }
                    }
                    isPopout={false}
                    mode="viewer"
                    type="panel"
          />
</div>,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": Object {},
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="view__header-container"
>
              <div
                            className="view__descriptor"
              >
                            Logged-In Viewer
                             Linked
                             (test:8080)
              </div>
</div>,
            <div
              className="view__close_button"
              onClick={[Function]}
>
              <img
                            alt="Close"
                            src="close_icon.png"
              />
</div>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="view__descriptor"
>
                  Logged-In Viewer
                   Linked
                   (test:8080)
</div>,
                false,
                false,
              ],
              "className": "view__header-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Logged-In Viewer",
                    " Linked",
                    null,
                    " (test:8080)",
                  ],
                  "className": "view__descriptor",
                },
                "ref": null,
                "rendered": Array [
                  "Logged-In Viewer",
                  " Linked",
                  null,
                  " (test:8080)",
                ],
                "type": "div",
              },
              false,
              false,
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt="Close"
                src="close_icon.png"
/>,
              "className": "view__close_button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Close",
                "src": "close_icon.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ExtensionFrame
            bindIframeToParent={[Function]}
            channelId="twitch"
            className="view"
            extension={
                        Object {
                                    "authorName": "test",
                                    "bitsEnabled": false,
                                    "clientId": "mockClientId",
                                    "description": "description",
                                    "iconUrl": "iconUrl",
                                    "iconUrls": Object {
                                      "square100": "100x100",
                                    },
                                    "id": "id",
                                    "name": "name",
                                    "requestIdentityLink": false,
                                    "sku": "sku",
                                    "state": "Released",
                                    "summary": "summary",
                                    "token": "token",
                                    "vendorCode": "vendorCode",
                                    "version": "0.1",
                                    "views": Object {
                                      "component": Object {
                                        "aspectHeight": 3000,
                                        "aspectWidth": 2500,
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                        "zoom": false,
                                        "zoomPixels": 100,
                                      },
                                      "config": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "liveConfig": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "mobile": Object {
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "panel": Object {
                                        "canLinkExternalContent": false,
                                        "height": 300,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "videoOverlay": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                    },
                                    "whitelistedConfigUrls": Array [
                                      "foo",
                                    ],
                                    "whitelistedPanelUrls": Array [
                                      "bar",
                                    ],
                                  }
            }
            frameId="frameid-0"
            installationAbilities={
                        Object {
                                    "isChatEnabled": true,
                                  }
            }
            isPopout={false}
            mode="viewer"
            type="panel"
/>,
          "className": "view",
          "style": Object {
            "height": "300px",
            "width": "320px",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bindIframeToParent": [Function],
            "channelId": "twitch",
            "className": "view",
            "extension": Object {
              "authorName": "test",
              "bitsEnabled": false,
              "clientId": "mockClientId",
              "description": "description",
              "iconUrl": "iconUrl",
              "iconUrls": Object {
                "square100": "100x100",
              },
              "id": "id",
              "name": "name",
              "requestIdentityLink": false,
              "sku": "sku",
              "state": "Released",
              "summary": "summary",
              "token": "token",
              "vendorCode": "vendorCode",
              "version": "0.1",
              "views": Object {
                "component": Object {
                  "aspectHeight": 3000,
                  "aspectWidth": 2500,
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                  "zoom": false,
                  "zoomPixels": 100,
                },
                "config": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "liveConfig": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "mobile": Object {
                  "viewerUrl": "https://test:8080",
                },
                "panel": Object {
                  "canLinkExternalContent": false,
                  "height": 300,
                  "viewerUrl": "https://test:8080",
                },
                "videoOverlay": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
              },
              "whitelistedConfigUrls": Array [
                "foo",
              ],
              "whitelistedPanelUrls": Array [
                "bar",
              ],
            },
            "frameId": "frameid-0",
            "installationAbilities": Object {
              "isChatEnabled": true,
            },
            "isPopout": false,
            "mode": "viewer",
            "type": "panel",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__header-container"
            >
                        <div
                                    className="view__descriptor"
                        >
                                    Logged-In Viewer
                                     Linked
                                     (test:8080)
                        </div>
            </div>
            <div
                        className="view__close_button"
                        onClick={[Function]}
            >
                        <img
                                    alt="Close"
                                    src="close_icon.png"
                        />
            </div>
</div>,
          <div
            className="view"
            style={
                        Object {
                                    "height": "300px",
                                    "width": "320px",
                                  }
            }
>
            <ExtensionFrame
                        bindIframeToParent={[Function]}
                        channelId="twitch"
                        className="view"
                        extension={
                                    Object {
                                                "authorName": "test",
                                                "bitsEnabled": false,
                                                "clientId": "mockClientId",
                                                "description": "description",
                                                "iconUrl": "iconUrl",
                                                "iconUrls": Object {
                                                  "square100": "100x100",
                                                },
                                                "id": "id",
                                                "name": "name",
                                                "requestIdentityLink": false,
                                                "sku": "sku",
                                                "state": "Released",
                                                "summary": "summary",
                                                "token": "token",
                                                "vendorCode": "vendorCode",
                                                "version": "0.1",
                                                "views": Object {
                                                  "component": Object {
                                                    "aspectHeight": 3000,
                                                    "aspectWidth": 2500,
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                    "zoom": false,
                                                    "zoomPixels": 100,
                                                  },
                                                  "config": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "liveConfig": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "mobile": Object {
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "panel": Object {
                                                    "canLinkExternalContent": false,
                                                    "height": 300,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "videoOverlay": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                },
                                                "whitelistedConfigUrls": Array [
                                                  "foo",
                                                ],
                                                "whitelistedPanelUrls": Array [
                                                  "bar",
                                                ],
                                              }
                        }
                        frameId="frameid-0"
                        installationAbilities={
                                    Object {
                                                "isChatEnabled": true,
                                              }
                        }
                        isPopout={false}
                        mode="viewer"
                        type="panel"
            />
</div>,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": Object {},
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="view__header-container"
>
                <div
                                className="view__descriptor"
                >
                                Logged-In Viewer
                                 Linked
                                 (test:8080)
                </div>
</div>,
              <div
                className="view__close_button"
                onClick={[Function]}
>
                <img
                                alt="Close"
                                src="close_icon.png"
                />
</div>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="view__descriptor"
>
                    Logged-In Viewer
                     Linked
                     (test:8080)
</div>,
                  false,
                  false,
                ],
                "className": "view__header-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Logged-In Viewer",
                      " Linked",
                      null,
                      " (test:8080)",
                    ],
                    "className": "view__descriptor",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Logged-In Viewer",
                    " Linked",
                    null,
                    " (test:8080)",
                  ],
                  "type": "div",
                },
                false,
                false,
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  alt="Close"
                  src="close_icon.png"
/>,
                "className": "view__close_button",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Close",
                  "src": "close_icon.png",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ExtensionFrame
              bindIframeToParent={[Function]}
              channelId="twitch"
              className="view"
              extension={
                            Object {
                                          "authorName": "test",
                                          "bitsEnabled": false,
                                          "clientId": "mockClientId",
                                          "description": "description",
                                          "iconUrl": "iconUrl",
                                          "iconUrls": Object {
                                            "square100": "100x100",
                                          },
                                          "id": "id",
                                          "name": "name",
                                          "requestIdentityLink": false,
                                          "sku": "sku",
                                          "state": "Released",
                                          "summary": "summary",
                                          "token": "token",
                                          "vendorCode": "vendorCode",
                                          "version": "0.1",
                                          "views": Object {
                                            "component": Object {
                                              "aspectHeight": 3000,
                                              "aspectWidth": 2500,
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                              "zoom": false,
                                              "zoomPixels": 100,
                                            },
                                            "config": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "liveConfig": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "mobile": Object {
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "panel": Object {
                                              "canLinkExternalContent": false,
                                              "height": 300,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "videoOverlay": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                          },
                                          "whitelistedConfigUrls": Array [
                                            "foo",
                                          ],
                                          "whitelistedPanelUrls": Array [
                                            "bar",
                                          ],
                                        }
              }
              frameId="frameid-0"
              installationAbilities={
                            Object {
                                          "isChatEnabled": true,
                                        }
              }
              isPopout={false}
              mode="viewer"
              type="panel"
/>,
            "className": "view",
            "style": Object {
              "height": "300px",
              "width": "320px",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bindIframeToParent": [Function],
              "channelId": "twitch",
              "className": "view",
              "extension": Object {
                "authorName": "test",
                "bitsEnabled": false,
                "clientId": "mockClientId",
                "description": "description",
                "iconUrl": "iconUrl",
                "iconUrls": Object {
                  "square100": "100x100",
                },
                "id": "id",
                "name": "name",
                "requestIdentityLink": false,
                "sku": "sku",
                "state": "Released",
                "summary": "summary",
                "token": "token",
                "vendorCode": "vendorCode",
                "version": "0.1",
                "views": Object {
                  "component": Object {
                    "aspectHeight": 3000,
                    "aspectWidth": 2500,
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                    "zoom": false,
                    "zoomPixels": 100,
                  },
                  "config": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                  "liveConfig": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                  "mobile": Object {
                    "viewerUrl": "https://test:8080",
                  },
                  "panel": Object {
                    "canLinkExternalContent": false,
                    "height": 300,
                    "viewerUrl": "https://test:8080",
                  },
                  "videoOverlay": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                },
                "whitelistedConfigUrls": Array [
                  "foo",
                ],
                "whitelistedPanelUrls": Array [
                  "bar",
                ],
              },
              "frameId": "frameid-0",
              "installationAbilities": Object {
                "isChatEnabled": true,
              },
              "isPopout": false,
              "mode": "viewer",
              "type": "panel",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> panel mode views renders correctly when in panel mode as a Logged In and Unlinked Viewer 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    channelId="twitch"
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "bitsEnabled": false,
            "clientId": "mockClientId",
            "description": "description",
            "iconUrl": "iconUrl",
            "iconUrls": Object {
              "square100": "100x100",
            },
            "id": "id",
            "name": "name",
            "requestIdentityLink": false,
            "sku": "sku",
            "state": "Released",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
                "zoom": false,
                "zoomPixels": 100,
              },
              "config": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "liveConfig": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "mobile": Object {
                "viewerUrl": "https://test:8080",
              },
              "panel": Object {
                "canLinkExternalContent": false,
                "height": 300,
                "viewerUrl": "https://test:8080",
              },
              "videoOverlay": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": 0,
            "width": 0,
          }
    }
    id="0"
    iframe=""
    installationAbilities={
        Object {
            "isChatEnabled": true,
          }
    }
    isLocal={true}
    isPopout={false}
    linked={false}
    mockApiEnabled={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Logged-In Viewer"
    type="panel"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__header-container"
          >
                    <div
                              className="view__descriptor"
                    >
                              Logged-In Viewer
                               Unlinked
                               (test:8080)
                    </div>
          </div>
          <div
                    className="view__close_button"
                    onClick={[Function]}
          >
                    <img
                              alt="Close"
                              src="close_icon.png"
                    />
          </div>
</div>,
        <div
          className="view"
          style={
                    Object {
                              "height": "300px",
                              "width": "320px",
                            }
          }
>
          <ExtensionFrame
                    bindIframeToParent={[Function]}
                    channelId="twitch"
                    className="view"
                    extension={
                              Object {
                                        "authorName": "test",
                                        "bitsEnabled": false,
                                        "clientId": "mockClientId",
                                        "description": "description",
                                        "iconUrl": "iconUrl",
                                        "iconUrls": Object {
                                          "square100": "100x100",
                                        },
                                        "id": "id",
                                        "name": "name",
                                        "requestIdentityLink": false,
                                        "sku": "sku",
                                        "state": "Released",
                                        "summary": "summary",
                                        "token": "token",
                                        "vendorCode": "vendorCode",
                                        "version": "0.1",
                                        "views": Object {
                                          "component": Object {
                                            "aspectHeight": 3000,
                                            "aspectWidth": 2500,
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                            "zoom": false,
                                            "zoomPixels": 100,
                                          },
                                          "config": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "liveConfig": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "mobile": Object {
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "panel": Object {
                                            "canLinkExternalContent": false,
                                            "height": 300,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "videoOverlay": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                        },
                                        "whitelistedConfigUrls": Array [
                                          "foo",
                                        ],
                                        "whitelistedPanelUrls": Array [
                                          "bar",
                                        ],
                                      }
                    }
                    frameId="frameid-0"
                    installationAbilities={
                              Object {
                                        "isChatEnabled": true,
                                      }
                    }
                    isPopout={false}
                    mode="viewer"
                    type="panel"
          />
</div>,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": Object {},
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="view__header-container"
>
              <div
                            className="view__descriptor"
              >
                            Logged-In Viewer
                             Unlinked
                             (test:8080)
              </div>
</div>,
            <div
              className="view__close_button"
              onClick={[Function]}
>
              <img
                            alt="Close"
                            src="close_icon.png"
              />
</div>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="view__descriptor"
>
                  Logged-In Viewer
                   Unlinked
                   (test:8080)
</div>,
                false,
                false,
              ],
              "className": "view__header-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Logged-In Viewer",
                    " Unlinked",
                    null,
                    " (test:8080)",
                  ],
                  "className": "view__descriptor",
                },
                "ref": null,
                "rendered": Array [
                  "Logged-In Viewer",
                  " Unlinked",
                  null,
                  " (test:8080)",
                ],
                "type": "div",
              },
              false,
              false,
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt="Close"
                src="close_icon.png"
/>,
              "className": "view__close_button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Close",
                "src": "close_icon.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ExtensionFrame
            bindIframeToParent={[Function]}
            channelId="twitch"
            className="view"
            extension={
                        Object {
                                    "authorName": "test",
                                    "bitsEnabled": false,
                                    "clientId": "mockClientId",
                                    "description": "description",
                                    "iconUrl": "iconUrl",
                                    "iconUrls": Object {
                                      "square100": "100x100",
                                    },
                                    "id": "id",
                                    "name": "name",
                                    "requestIdentityLink": false,
                                    "sku": "sku",
                                    "state": "Released",
                                    "summary": "summary",
                                    "token": "token",
                                    "vendorCode": "vendorCode",
                                    "version": "0.1",
                                    "views": Object {
                                      "component": Object {
                                        "aspectHeight": 3000,
                                        "aspectWidth": 2500,
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                        "zoom": false,
                                        "zoomPixels": 100,
                                      },
                                      "config": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "liveConfig": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "mobile": Object {
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "panel": Object {
                                        "canLinkExternalContent": false,
                                        "height": 300,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "videoOverlay": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                    },
                                    "whitelistedConfigUrls": Array [
                                      "foo",
                                    ],
                                    "whitelistedPanelUrls": Array [
                                      "bar",
                                    ],
                                  }
            }
            frameId="frameid-0"
            installationAbilities={
                        Object {
                                    "isChatEnabled": true,
                                  }
            }
            isPopout={false}
            mode="viewer"
            type="panel"
/>,
          "className": "view",
          "style": Object {
            "height": "300px",
            "width": "320px",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bindIframeToParent": [Function],
            "channelId": "twitch",
            "className": "view",
            "extension": Object {
              "authorName": "test",
              "bitsEnabled": false,
              "clientId": "mockClientId",
              "description": "description",
              "iconUrl": "iconUrl",
              "iconUrls": Object {
                "square100": "100x100",
              },
              "id": "id",
              "name": "name",
              "requestIdentityLink": false,
              "sku": "sku",
              "state": "Released",
              "summary": "summary",
              "token": "token",
              "vendorCode": "vendorCode",
              "version": "0.1",
              "views": Object {
                "component": Object {
                  "aspectHeight": 3000,
                  "aspectWidth": 2500,
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                  "zoom": false,
                  "zoomPixels": 100,
                },
                "config": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "liveConfig": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "mobile": Object {
                  "viewerUrl": "https://test:8080",
                },
                "panel": Object {
                  "canLinkExternalContent": false,
                  "height": 300,
                  "viewerUrl": "https://test:8080",
                },
                "videoOverlay": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
              },
              "whitelistedConfigUrls": Array [
                "foo",
              ],
              "whitelistedPanelUrls": Array [
                "bar",
              ],
            },
            "frameId": "frameid-0",
            "installationAbilities": Object {
              "isChatEnabled": true,
            },
            "isPopout": false,
            "mode": "viewer",
            "type": "panel",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__header-container"
            >
                        <div
                                    className="view__descriptor"
                        >
                                    Logged-In Viewer
                                     Unlinked
                                     (test:8080)
                        </div>
            </div>
            <div
                        className="view__close_button"
                        onClick={[Function]}
            >
                        <img
                                    alt="Close"
                                    src="close_icon.png"
                        />
            </div>
</div>,
          <div
            className="view"
            style={
                        Object {
                                    "height": "300px",
                                    "width": "320px",
                                  }
            }
>
            <ExtensionFrame
                        bindIframeToParent={[Function]}
                        channelId="twitch"
                        className="view"
                        extension={
                                    Object {
                                                "authorName": "test",
                                                "bitsEnabled": false,
                                                "clientId": "mockClientId",
                                                "description": "description",
                                                "iconUrl": "iconUrl",
                                                "iconUrls": Object {
                                                  "square100": "100x100",
                                                },
                                                "id": "id",
                                                "name": "name",
                                                "requestIdentityLink": false,
                                                "sku": "sku",
                                                "state": "Released",
                                                "summary": "summary",
                                                "token": "token",
                                                "vendorCode": "vendorCode",
                                                "version": "0.1",
                                                "views": Object {
                                                  "component": Object {
                                                    "aspectHeight": 3000,
                                                    "aspectWidth": 2500,
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                    "zoom": false,
                                                    "zoomPixels": 100,
                                                  },
                                                  "config": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "liveConfig": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "mobile": Object {
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "panel": Object {
                                                    "canLinkExternalContent": false,
                                                    "height": 300,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "videoOverlay": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                },
                                                "whitelistedConfigUrls": Array [
                                                  "foo",
                                                ],
                                                "whitelistedPanelUrls": Array [
                                                  "bar",
                                                ],
                                              }
                        }
                        frameId="frameid-0"
                        installationAbilities={
                                    Object {
                                                "isChatEnabled": true,
                                              }
                        }
                        isPopout={false}
                        mode="viewer"
                        type="panel"
            />
</div>,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": Object {},
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="view__header-container"
>
                <div
                                className="view__descriptor"
                >
                                Logged-In Viewer
                                 Unlinked
                                 (test:8080)
                </div>
</div>,
              <div
                className="view__close_button"
                onClick={[Function]}
>
                <img
                                alt="Close"
                                src="close_icon.png"
                />
</div>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="view__descriptor"
>
                    Logged-In Viewer
                     Unlinked
                     (test:8080)
</div>,
                  false,
                  false,
                ],
                "className": "view__header-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Logged-In Viewer",
                      " Unlinked",
                      null,
                      " (test:8080)",
                    ],
                    "className": "view__descriptor",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Logged-In Viewer",
                    " Unlinked",
                    null,
                    " (test:8080)",
                  ],
                  "type": "div",
                },
                false,
                false,
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  alt="Close"
                  src="close_icon.png"
/>,
                "className": "view__close_button",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Close",
                  "src": "close_icon.png",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ExtensionFrame
              bindIframeToParent={[Function]}
              channelId="twitch"
              className="view"
              extension={
                            Object {
                                          "authorName": "test",
                                          "bitsEnabled": false,
                                          "clientId": "mockClientId",
                                          "description": "description",
                                          "iconUrl": "iconUrl",
                                          "iconUrls": Object {
                                            "square100": "100x100",
                                          },
                                          "id": "id",
                                          "name": "name",
                                          "requestIdentityLink": false,
                                          "sku": "sku",
                                          "state": "Released",
                                          "summary": "summary",
                                          "token": "token",
                                          "vendorCode": "vendorCode",
                                          "version": "0.1",
                                          "views": Object {
                                            "component": Object {
                                              "aspectHeight": 3000,
                                              "aspectWidth": 2500,
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                              "zoom": false,
                                              "zoomPixels": 100,
                                            },
                                            "config": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "liveConfig": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "mobile": Object {
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "panel": Object {
                                              "canLinkExternalContent": false,
                                              "height": 300,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "videoOverlay": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                          },
                                          "whitelistedConfigUrls": Array [
                                            "foo",
                                          ],
                                          "whitelistedPanelUrls": Array [
                                            "bar",
                                          ],
                                        }
              }
              frameId="frameid-0"
              installationAbilities={
                            Object {
                                          "isChatEnabled": true,
                                        }
              }
              isPopout={false}
              mode="viewer"
              type="panel"
/>,
            "className": "view",
            "style": Object {
              "height": "300px",
              "width": "320px",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bindIframeToParent": [Function],
              "channelId": "twitch",
              "className": "view",
              "extension": Object {
                "authorName": "test",
                "bitsEnabled": false,
                "clientId": "mockClientId",
                "description": "description",
                "iconUrl": "iconUrl",
                "iconUrls": Object {
                  "square100": "100x100",
                },
                "id": "id",
                "name": "name",
                "requestIdentityLink": false,
                "sku": "sku",
                "state": "Released",
                "summary": "summary",
                "token": "token",
                "vendorCode": "vendorCode",
                "version": "0.1",
                "views": Object {
                  "component": Object {
                    "aspectHeight": 3000,
                    "aspectWidth": 2500,
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                    "zoom": false,
                    "zoomPixels": 100,
                  },
                  "config": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                  "liveConfig": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                  "mobile": Object {
                    "viewerUrl": "https://test:8080",
                  },
                  "panel": Object {
                    "canLinkExternalContent": false,
                    "height": 300,
                    "viewerUrl": "https://test:8080",
                  },
                  "videoOverlay": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                },
                "whitelistedConfigUrls": Array [
                  "foo",
                ],
                "whitelistedPanelUrls": Array [
                  "bar",
                ],
              },
              "frameId": "frameid-0",
              "installationAbilities": Object {
                "isChatEnabled": true,
              },
              "isPopout": false,
              "mode": "viewer",
              "type": "panel",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> panel mode views renders correctly when in panel mode as a Logged Out 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    channelId="twitch"
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "bitsEnabled": false,
            "clientId": "mockClientId",
            "description": "description",
            "iconUrl": "iconUrl",
            "iconUrls": Object {
              "square100": "100x100",
            },
            "id": "id",
            "name": "name",
            "requestIdentityLink": false,
            "sku": "sku",
            "state": "Released",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
                "zoom": false,
                "zoomPixels": 100,
              },
              "config": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "liveConfig": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
              "mobile": Object {
                "viewerUrl": "https://test:8080",
              },
              "panel": Object {
                "canLinkExternalContent": false,
                "height": 300,
                "viewerUrl": "https://test:8080",
              },
              "videoOverlay": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "https://test:8080",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": 0,
            "width": 0,
          }
    }
    id="0"
    iframe=""
    installationAbilities={
        Object {
            "isChatEnabled": true,
          }
    }
    isLocal={true}
    isPopout={false}
    linked={false}
    mockApiEnabled={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Logged-Out Viewer"
    type="panel"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__header-container"
          >
                    <div
                              className="view__descriptor"
                    >
                              Logged-Out Viewer
                               (test:8080)
                    </div>
          </div>
          <div
                    className="view__close_button"
                    onClick={[Function]}
          >
                    <img
                              alt="Close"
                              src="close_icon.png"
                    />
          </div>
</div>,
        <div
          className="view"
          style={
                    Object {
                              "height": "300px",
                              "width": "320px",
                            }
          }
>
          <ExtensionFrame
                    bindIframeToParent={[Function]}
                    channelId="twitch"
                    className="view"
                    extension={
                              Object {
                                        "authorName": "test",
                                        "bitsEnabled": false,
                                        "clientId": "mockClientId",
                                        "description": "description",
                                        "iconUrl": "iconUrl",
                                        "iconUrls": Object {
                                          "square100": "100x100",
                                        },
                                        "id": "id",
                                        "name": "name",
                                        "requestIdentityLink": false,
                                        "sku": "sku",
                                        "state": "Released",
                                        "summary": "summary",
                                        "token": "token",
                                        "vendorCode": "vendorCode",
                                        "version": "0.1",
                                        "views": Object {
                                          "component": Object {
                                            "aspectHeight": 3000,
                                            "aspectWidth": 2500,
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                            "zoom": false,
                                            "zoomPixels": 100,
                                          },
                                          "config": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "liveConfig": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "mobile": Object {
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "panel": Object {
                                            "canLinkExternalContent": false,
                                            "height": 300,
                                            "viewerUrl": "https://test:8080",
                                          },
                                          "videoOverlay": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "https://test:8080",
                                          },
                                        },
                                        "whitelistedConfigUrls": Array [
                                          "foo",
                                        ],
                                        "whitelistedPanelUrls": Array [
                                          "bar",
                                        ],
                                      }
                    }
                    frameId="frameid-0"
                    installationAbilities={
                              Object {
                                        "isChatEnabled": true,
                                      }
                    }
                    isPopout={false}
                    mode="viewer"
                    type="panel"
          />
</div>,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": Object {},
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="view__header-container"
>
              <div
                            className="view__descriptor"
              >
                            Logged-Out Viewer
                             (test:8080)
              </div>
</div>,
            <div
              className="view__close_button"
              onClick={[Function]}
>
              <img
                            alt="Close"
                            src="close_icon.png"
              />
</div>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="view__descriptor"
>
                  Logged-Out Viewer
                   (test:8080)
</div>,
                false,
                false,
              ],
              "className": "view__header-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Logged-Out Viewer",
                    null,
                    null,
                    " (test:8080)",
                  ],
                  "className": "view__descriptor",
                },
                "ref": null,
                "rendered": Array [
                  "Logged-Out Viewer",
                  null,
                  null,
                  " (test:8080)",
                ],
                "type": "div",
              },
              false,
              false,
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt="Close"
                src="close_icon.png"
/>,
              "className": "view__close_button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Close",
                "src": "close_icon.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ExtensionFrame
            bindIframeToParent={[Function]}
            channelId="twitch"
            className="view"
            extension={
                        Object {
                                    "authorName": "test",
                                    "bitsEnabled": false,
                                    "clientId": "mockClientId",
                                    "description": "description",
                                    "iconUrl": "iconUrl",
                                    "iconUrls": Object {
                                      "square100": "100x100",
                                    },
                                    "id": "id",
                                    "name": "name",
                                    "requestIdentityLink": false,
                                    "sku": "sku",
                                    "state": "Released",
                                    "summary": "summary",
                                    "token": "token",
                                    "vendorCode": "vendorCode",
                                    "version": "0.1",
                                    "views": Object {
                                      "component": Object {
                                        "aspectHeight": 3000,
                                        "aspectWidth": 2500,
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                        "zoom": false,
                                        "zoomPixels": 100,
                                      },
                                      "config": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "liveConfig": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "mobile": Object {
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "panel": Object {
                                        "canLinkExternalContent": false,
                                        "height": 300,
                                        "viewerUrl": "https://test:8080",
                                      },
                                      "videoOverlay": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "https://test:8080",
                                      },
                                    },
                                    "whitelistedConfigUrls": Array [
                                      "foo",
                                    ],
                                    "whitelistedPanelUrls": Array [
                                      "bar",
                                    ],
                                  }
            }
            frameId="frameid-0"
            installationAbilities={
                        Object {
                                    "isChatEnabled": true,
                                  }
            }
            isPopout={false}
            mode="viewer"
            type="panel"
/>,
          "className": "view",
          "style": Object {
            "height": "300px",
            "width": "320px",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bindIframeToParent": [Function],
            "channelId": "twitch",
            "className": "view",
            "extension": Object {
              "authorName": "test",
              "bitsEnabled": false,
              "clientId": "mockClientId",
              "description": "description",
              "iconUrl": "iconUrl",
              "iconUrls": Object {
                "square100": "100x100",
              },
              "id": "id",
              "name": "name",
              "requestIdentityLink": false,
              "sku": "sku",
              "state": "Released",
              "summary": "summary",
              "token": "token",
              "vendorCode": "vendorCode",
              "version": "0.1",
              "views": Object {
                "component": Object {
                  "aspectHeight": 3000,
                  "aspectWidth": 2500,
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                  "zoom": false,
                  "zoomPixels": 100,
                },
                "config": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "liveConfig": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
                "mobile": Object {
                  "viewerUrl": "https://test:8080",
                },
                "panel": Object {
                  "canLinkExternalContent": false,
                  "height": 300,
                  "viewerUrl": "https://test:8080",
                },
                "videoOverlay": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "https://test:8080",
                },
              },
              "whitelistedConfigUrls": Array [
                "foo",
              ],
              "whitelistedPanelUrls": Array [
                "bar",
              ],
            },
            "frameId": "frameid-0",
            "installationAbilities": Object {
              "isChatEnabled": true,
            },
            "isPopout": false,
            "mode": "viewer",
            "type": "panel",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__header-container"
            >
                        <div
                                    className="view__descriptor"
                        >
                                    Logged-Out Viewer
                                     (test:8080)
                        </div>
            </div>
            <div
                        className="view__close_button"
                        onClick={[Function]}
            >
                        <img
                                    alt="Close"
                                    src="close_icon.png"
                        />
            </div>
</div>,
          <div
            className="view"
            style={
                        Object {
                                    "height": "300px",
                                    "width": "320px",
                                  }
            }
>
            <ExtensionFrame
                        bindIframeToParent={[Function]}
                        channelId="twitch"
                        className="view"
                        extension={
                                    Object {
                                                "authorName": "test",
                                                "bitsEnabled": false,
                                                "clientId": "mockClientId",
                                                "description": "description",
                                                "iconUrl": "iconUrl",
                                                "iconUrls": Object {
                                                  "square100": "100x100",
                                                },
                                                "id": "id",
                                                "name": "name",
                                                "requestIdentityLink": false,
                                                "sku": "sku",
                                                "state": "Released",
                                                "summary": "summary",
                                                "token": "token",
                                                "vendorCode": "vendorCode",
                                                "version": "0.1",
                                                "views": Object {
                                                  "component": Object {
                                                    "aspectHeight": 3000,
                                                    "aspectWidth": 2500,
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                    "zoom": false,
                                                    "zoomPixels": 100,
                                                  },
                                                  "config": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "liveConfig": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "mobile": Object {
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "panel": Object {
                                                    "canLinkExternalContent": false,
                                                    "height": 300,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                  "videoOverlay": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "https://test:8080",
                                                  },
                                                },
                                                "whitelistedConfigUrls": Array [
                                                  "foo",
                                                ],
                                                "whitelistedPanelUrls": Array [
                                                  "bar",
                                                ],
                                              }
                        }
                        frameId="frameid-0"
                        installationAbilities={
                                    Object {
                                                "isChatEnabled": true,
                                              }
                        }
                        isPopout={false}
                        mode="viewer"
                        type="panel"
            />
</div>,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": Object {},
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="view__header-container"
>
                <div
                                className="view__descriptor"
                >
                                Logged-Out Viewer
                                 (test:8080)
                </div>
</div>,
              <div
                className="view__close_button"
                onClick={[Function]}
>
                <img
                                alt="Close"
                                src="close_icon.png"
                />
</div>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="view__descriptor"
>
                    Logged-Out Viewer
                     (test:8080)
</div>,
                  false,
                  false,
                ],
                "className": "view__header-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Logged-Out Viewer",
                      null,
                      null,
                      " (test:8080)",
                    ],
                    "className": "view__descriptor",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Logged-Out Viewer",
                    null,
                    null,
                    " (test:8080)",
                  ],
                  "type": "div",
                },
                false,
                false,
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  alt="Close"
                  src="close_icon.png"
/>,
                "className": "view__close_button",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Close",
                  "src": "close_icon.png",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ExtensionFrame
              bindIframeToParent={[Function]}
              channelId="twitch"
              className="view"
              extension={
                            Object {
                                          "authorName": "test",
                                          "bitsEnabled": false,
                                          "clientId": "mockClientId",
                                          "description": "description",
                                          "iconUrl": "iconUrl",
                                          "iconUrls": Object {
                                            "square100": "100x100",
                                          },
                                          "id": "id",
                                          "name": "name",
                                          "requestIdentityLink": false,
                                          "sku": "sku",
                                          "state": "Released",
                                          "summary": "summary",
                                          "token": "token",
                                          "vendorCode": "vendorCode",
                                          "version": "0.1",
                                          "views": Object {
                                            "component": Object {
                                              "aspectHeight": 3000,
                                              "aspectWidth": 2500,
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                              "zoom": false,
                                              "zoomPixels": 100,
                                            },
                                            "config": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "liveConfig": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "mobile": Object {
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "panel": Object {
                                              "canLinkExternalContent": false,
                                              "height": 300,
                                              "viewerUrl": "https://test:8080",
                                            },
                                            "videoOverlay": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "https://test:8080",
                                            },
                                          },
                                          "whitelistedConfigUrls": Array [
                                            "foo",
                                          ],
                                          "whitelistedPanelUrls": Array [
                                            "bar",
                                          ],
                                        }
              }
              frameId="frameid-0"
              installationAbilities={
                            Object {
                                          "isChatEnabled": true,
                                        }
              }
              isPopout={false}
              mode="viewer"
              type="panel"
/>,
            "className": "view",
            "style": Object {
              "height": "300px",
              "width": "320px",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bindIframeToParent": [Function],
              "channelId": "twitch",
              "className": "view",
              "extension": Object {
                "authorName": "test",
                "bitsEnabled": false,
                "clientId": "mockClientId",
                "description": "description",
                "iconUrl": "iconUrl",
                "iconUrls": Object {
                  "square100": "100x100",
                },
                "id": "id",
                "name": "name",
                "requestIdentityLink": false,
                "sku": "sku",
                "state": "Released",
                "summary": "summary",
                "token": "token",
                "vendorCode": "vendorCode",
                "version": "0.1",
                "views": Object {
                  "component": Object {
                    "aspectHeight": 3000,
                    "aspectWidth": 2500,
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                    "zoom": false,
                    "zoomPixels": 100,
                  },
                  "config": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                  "liveConfig": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                  "mobile": Object {
                    "viewerUrl": "https://test:8080",
                  },
                  "panel": Object {
                    "canLinkExternalContent": false,
                    "height": 300,
                    "viewerUrl": "https://test:8080",
                  },
                  "videoOverlay": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "https://test:8080",
                  },
                },
                "whitelistedConfigUrls": Array [
                  "foo",
                ],
                "whitelistedPanelUrls": Array [
                  "bar",
                ],
              },
              "frameId": "frameid-0",
              "installationAbilities": Object {
                "isChatEnabled": true,
              },
              "isPopout": false,
              "mode": "viewer",
              "type": "panel",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> panel mode views sets correct panel height when panel height provided 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    channelId="twitch"
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "bitsEnabled": false,
            "clientId": "mockClientId",
            "description": "description",
            "iconUrl": "iconUrl",
            "iconUrls": Object {
              "square100": "100x100",
            },
            "id": "id",
            "name": "name",
            "requestIdentityLink": false,
            "sku": "sku",
            "state": "Released",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "config": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "test",
              },
              "liveConfig": Object {
                "canLinkExternalContent": false,
                "viewerUrl": "test",
              },
              "panel": Object {
                "canLinkExternalContent": false,
                "height": 300,
                "viewerUrl": "test",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": 0,
            "width": 0,
          }
    }
    id="0"
    iframe=""
    installationAbilities={
        Object {
            "isChatEnabled": true,
          }
    }
    isLocal={true}
    isPopout={false}
    linked={false}
    mockApiEnabled={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Broadcaster"
    type="panel"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__header-container"
          >
                    <div
                              className="view__descriptor"
                    >
                              Broadcaster
                               (test)
                    </div>
          </div>
          <div
                    className="view__close_button"
                    onClick={[Function]}
          >
                    <img
                              alt="Close"
                              src="close_icon.png"
                    />
          </div>
</div>,
        <div
          className="view"
          style={
                    Object {
                              "height": "300px",
                              "width": "320px",
                            }
          }
>
          <ExtensionFrame
                    bindIframeToParent={[Function]}
                    channelId="twitch"
                    className="view"
                    extension={
                              Object {
                                        "authorName": "test",
                                        "bitsEnabled": false,
                                        "clientId": "mockClientId",
                                        "description": "description",
                                        "iconUrl": "iconUrl",
                                        "iconUrls": Object {
                                          "square100": "100x100",
                                        },
                                        "id": "id",
                                        "name": "name",
                                        "requestIdentityLink": false,
                                        "sku": "sku",
                                        "state": "Released",
                                        "summary": "summary",
                                        "token": "token",
                                        "vendorCode": "vendorCode",
                                        "version": "0.1",
                                        "views": Object {
                                          "config": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "test",
                                          },
                                          "liveConfig": Object {
                                            "canLinkExternalContent": false,
                                            "viewerUrl": "test",
                                          },
                                          "panel": Object {
                                            "canLinkExternalContent": false,
                                            "height": 300,
                                            "viewerUrl": "test",
                                          },
                                        },
                                        "whitelistedConfigUrls": Array [
                                          "foo",
                                        ],
                                        "whitelistedPanelUrls": Array [
                                          "bar",
                                        ],
                                      }
                    }
                    frameId="frameid-0"
                    installationAbilities={
                              Object {
                                        "isChatEnabled": true,
                                      }
                    }
                    isPopout={false}
                    mode="viewer"
                    type="panel"
          />
</div>,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": Object {},
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="view__header-container"
>
              <div
                            className="view__descriptor"
              >
                            Broadcaster
                             (test)
              </div>
</div>,
            <div
              className="view__close_button"
              onClick={[Function]}
>
              <img
                            alt="Close"
                            src="close_icon.png"
              />
</div>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="view__descriptor"
>
                  Broadcaster
                   (test)
</div>,
                false,
                false,
              ],
              "className": "view__header-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Broadcaster",
                    null,
                    null,
                    " (test)",
                  ],
                  "className": "view__descriptor",
                },
                "ref": null,
                "rendered": Array [
                  "Broadcaster",
                  null,
                  null,
                  " (test)",
                ],
                "type": "div",
              },
              false,
              false,
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt="Close"
                src="close_icon.png"
/>,
              "className": "view__close_button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Close",
                "src": "close_icon.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ExtensionFrame
            bindIframeToParent={[Function]}
            channelId="twitch"
            className="view"
            extension={
                        Object {
                                    "authorName": "test",
                                    "bitsEnabled": false,
                                    "clientId": "mockClientId",
                                    "description": "description",
                                    "iconUrl": "iconUrl",
                                    "iconUrls": Object {
                                      "square100": "100x100",
                                    },
                                    "id": "id",
                                    "name": "name",
                                    "requestIdentityLink": false,
                                    "sku": "sku",
                                    "state": "Released",
                                    "summary": "summary",
                                    "token": "token",
                                    "vendorCode": "vendorCode",
                                    "version": "0.1",
                                    "views": Object {
                                      "config": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "test",
                                      },
                                      "liveConfig": Object {
                                        "canLinkExternalContent": false,
                                        "viewerUrl": "test",
                                      },
                                      "panel": Object {
                                        "canLinkExternalContent": false,
                                        "height": 300,
                                        "viewerUrl": "test",
                                      },
                                    },
                                    "whitelistedConfigUrls": Array [
                                      "foo",
                                    ],
                                    "whitelistedPanelUrls": Array [
                                      "bar",
                                    ],
                                  }
            }
            frameId="frameid-0"
            installationAbilities={
                        Object {
                                    "isChatEnabled": true,
                                  }
            }
            isPopout={false}
            mode="viewer"
            type="panel"
/>,
          "className": "view",
          "style": Object {
            "height": "300px",
            "width": "320px",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bindIframeToParent": [Function],
            "channelId": "twitch",
            "className": "view",
            "extension": Object {
              "authorName": "test",
              "bitsEnabled": false,
              "clientId": "mockClientId",
              "description": "description",
              "iconUrl": "iconUrl",
              "iconUrls": Object {
                "square100": "100x100",
              },
              "id": "id",
              "name": "name",
              "requestIdentityLink": false,
              "sku": "sku",
              "state": "Released",
              "summary": "summary",
              "token": "token",
              "vendorCode": "vendorCode",
              "version": "0.1",
              "views": Object {
                "config": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "test",
                },
                "liveConfig": Object {
                  "canLinkExternalContent": false,
                  "viewerUrl": "test",
                },
                "panel": Object {
                  "canLinkExternalContent": false,
                  "height": 300,
                  "viewerUrl": "test",
                },
              },
              "whitelistedConfigUrls": Array [
                "foo",
              ],
              "whitelistedPanelUrls": Array [
                "bar",
              ],
            },
            "frameId": "frameid-0",
            "installationAbilities": Object {
              "isChatEnabled": true,
            },
            "isPopout": false,
            "mode": "viewer",
            "type": "panel",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__header-container"
            >
                        <div
                                    className="view__descriptor"
                        >
                                    Broadcaster
                                     (test)
                        </div>
            </div>
            <div
                        className="view__close_button"
                        onClick={[Function]}
            >
                        <img
                                    alt="Close"
                                    src="close_icon.png"
                        />
            </div>
</div>,
          <div
            className="view"
            style={
                        Object {
                                    "height": "300px",
                                    "width": "320px",
                                  }
            }
>
            <ExtensionFrame
                        bindIframeToParent={[Function]}
                        channelId="twitch"
                        className="view"
                        extension={
                                    Object {
                                                "authorName": "test",
                                                "bitsEnabled": false,
                                                "clientId": "mockClientId",
                                                "description": "description",
                                                "iconUrl": "iconUrl",
                                                "iconUrls": Object {
                                                  "square100": "100x100",
                                                },
                                                "id": "id",
                                                "name": "name",
                                                "requestIdentityLink": false,
                                                "sku": "sku",
                                                "state": "Released",
                                                "summary": "summary",
                                                "token": "token",
                                                "vendorCode": "vendorCode",
                                                "version": "0.1",
                                                "views": Object {
                                                  "config": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "test",
                                                  },
                                                  "liveConfig": Object {
                                                    "canLinkExternalContent": false,
                                                    "viewerUrl": "test",
                                                  },
                                                  "panel": Object {
                                                    "canLinkExternalContent": false,
                                                    "height": 300,
                                                    "viewerUrl": "test",
                                                  },
                                                },
                                                "whitelistedConfigUrls": Array [
                                                  "foo",
                                                ],
                                                "whitelistedPanelUrls": Array [
                                                  "bar",
                                                ],
                                              }
                        }
                        frameId="frameid-0"
                        installationAbilities={
                                    Object {
                                                "isChatEnabled": true,
                                              }
                        }
                        isPopout={false}
                        mode="viewer"
                        type="panel"
            />
</div>,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": Object {},
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="view__header-container"
>
                <div
                                className="view__descriptor"
                >
                                Broadcaster
                                 (test)
                </div>
</div>,
              <div
                className="view__close_button"
                onClick={[Function]}
>
                <img
                                alt="Close"
                                src="close_icon.png"
                />
</div>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="view__descriptor"
>
                    Broadcaster
                     (test)
</div>,
                  false,
                  false,
                ],
                "className": "view__header-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Broadcaster",
                      null,
                      null,
                      " (test)",
                    ],
                    "className": "view__descriptor",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Broadcaster",
                    null,
                    null,
                    " (test)",
                  ],
                  "type": "div",
                },
                false,
                false,
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  alt="Close"
                  src="close_icon.png"
/>,
                "className": "view__close_button",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Close",
                  "src": "close_icon.png",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ExtensionFrame
              bindIframeToParent={[Function]}
              channelId="twitch"
              className="view"
              extension={
                            Object {
                                          "authorName": "test",
                                          "bitsEnabled": false,
                                          "clientId": "mockClientId",
                                          "description": "description",
                                          "iconUrl": "iconUrl",
                                          "iconUrls": Object {
                                            "square100": "100x100",
                                          },
                                          "id": "id",
                                          "name": "name",
                                          "requestIdentityLink": false,
                                          "sku": "sku",
                                          "state": "Released",
                                          "summary": "summary",
                                          "token": "token",
                                          "vendorCode": "vendorCode",
                                          "version": "0.1",
                                          "views": Object {
                                            "config": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "test",
                                            },
                                            "liveConfig": Object {
                                              "canLinkExternalContent": false,
                                              "viewerUrl": "test",
                                            },
                                            "panel": Object {
                                              "canLinkExternalContent": false,
                                              "height": 300,
                                              "viewerUrl": "test",
                                            },
                                          },
                                          "whitelistedConfigUrls": Array [
                                            "foo",
                                          ],
                                          "whitelistedPanelUrls": Array [
                                            "bar",
                                          ],
                                        }
              }
              frameId="frameid-0"
              installationAbilities={
                            Object {
                                          "isChatEnabled": true,
                                        }
              }
              isPopout={false}
              mode="viewer"
              type="panel"
/>,
            "className": "view",
            "style": Object {
              "height": "300px",
              "width": "320px",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bindIframeToParent": [Function],
              "channelId": "twitch",
              "className": "view",
              "extension": Object {
                "authorName": "test",
                "bitsEnabled": false,
                "clientId": "mockClientId",
                "description": "description",
                "iconUrl": "iconUrl",
                "iconUrls": Object {
                  "square100": "100x100",
                },
                "id": "id",
                "name": "name",
                "requestIdentityLink": false,
                "sku": "sku",
                "state": "Released",
                "summary": "summary",
                "token": "token",
                "vendorCode": "vendorCode",
                "version": "0.1",
                "views": Object {
                  "config": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "test",
                  },
                  "liveConfig": Object {
                    "canLinkExternalContent": false,
                    "viewerUrl": "test",
                  },
                  "panel": Object {
                    "canLinkExternalContent": false,
                    "height": 300,
                    "viewerUrl": "test",
                  },
                },
                "whitelistedConfigUrls": Array [
                  "foo",
                ],
                "whitelistedPanelUrls": Array [
                  "bar",
                ],
              },
              "frameId": "frameid-0",
              "installationAbilities": Object {
                "isChatEnabled": true,
              },
              "isPopout": false,
              "mode": "viewer",
              "type": "panel",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
