// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RunListTrigger /> renders correctly 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <RunListTrigger
    iframe={
        Object {
            "contentWindow": Object {
              "postMessage": [Function],
            },
          }
    }
    runList={
        Object {
            "onAuthorized": Array [
              Object {
                "name": "testAuth",
              },
            ],
            "onContext": Array [
              Object {
                "name": "testContext",
              },
            ],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": RunListTrigger {
      "_reactInternalFiber": FiberNode {
        "_debugID": 5,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "iframe": Object {
                "contentWindow": Object {
                  "postMessage": [Function],
                },
              },
              "runList": Object {
                "onAuthorized": Array [
                  Object {
                    "name": "testAuth",
                  },
                ],
                "onContext": Array [
                  Object {
                    "name": "testContext",
                  },
                ],
              },
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "iframe": Object {
                "contentWindow": Object {
                  "postMessage": [Function],
                },
              },
              "runList": Object {
                "onAuthorized": Array [
                  Object {
                    "name": "testAuth",
                  },
                ],
                "onContext": Array [
                  Object {
                    "name": "testContext",
                  },
                ],
              },
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "iframe": Object {
                "contentWindow": Object {
                  "postMessage": [Function],
                },
              },
              "runList": Object {
                "onAuthorized": Array [
                  Object {
                    "name": "testAuth",
                  },
                ],
                "onContext": Array [
                  Object {
                    "name": "testContext",
                  },
                ],
              },
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="runlist-trigger"
                  >
                                    <div
                                                      class="runlist-trigger__text"
                                    >
                                                      [Response Recieved]
                                    </div>
                                    <select
                                                      class="runlist-trigger__select"
                                    >
                                                      <option>
                                                                        testContext
                                                      </option>
                                                      <option>
                                                                        testAuth
                                                      </option>
                                    </select>
                                    <button
                                                      class="runlist-trigger__button"
                                    >
                                                      Trigger
                                    </button>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "expirationTime": 1,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "iframe": Object {
                                                                    "contentWindow": Object {
                                                                      "postMessage": [Function],
                                                                    },
                                                                  },
                                                                  "runList": Object {
                                                                    "onAuthorized": Array [
                                                                      Object {
                                                                        "name": "testAuth",
                                                                      },
                                                                    ],
                                                                    "onContext": Array [
                                                                      Object {
                                                                        "name": "testContext",
                                                                      },
                                                                    ],
                                                                  },
                                                                }
                      }
/>,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "iframe": Object {
                                                                    "contentWindow": Object {
                                                                      "postMessage": [Function],
                                                                    },
                                                                  },
                                                                  "runList": Object {
                                                                    "onAuthorized": Array [
                                                                      Object {
                                                                        "name": "testAuth",
                                                                      },
                                                                    ],
                                                                    "onContext": Array [
                                                                      Object {
                                                                        "name": "testContext",
                                                                      },
                                                                    ],
                                                                  },
                                                                }
                      }
/>,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                                Object {
                                                "iframe": Object {
                                                  "contentWindow": Object {
                                                    "postMessage": [Function],
                                                  },
                                                },
                                                "runList": Object {
                                                  "onAuthorized": Array [
                                                    Object {
                                                      "name": "testAuth",
                                                    },
                                                  ],
                                                  "onContext": Array [
                                                    Object {
                                                      "name": "testContext",
                                                    },
                                                  ],
                                                },
                                              }
                }
/>,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                                class="runlist-trigger"
                >
                                <div
                                                class="runlist-trigger__text"
                                >
                                                [Response Recieved]
                                </div>
                                <select
                                                class="runlist-trigger__select"
                                >
                                                <option>
                                                                testContext
                                                </option>
                                                <option>
                                                                testAuth
                                                </option>
                                </select>
                                <button
                                                class="runlist-trigger__button"
                                >
                                                Trigger
                                </button>
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "iframe": Object {
                                                        "contentWindow": Object {
                                                          "postMessage": [Function],
                                                        },
                                                      },
                                                      "runList": Object {
                                                        "onAuthorized": Array [
                                                          Object {
                                                            "name": "testAuth",
                                                          },
                                                        ],
                                                        "onContext": Array [
                                                          Object {
                                                            "name": "testContext",
                                                          },
                                                        ],
                                                      },
                                                    }
                  }
/>,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "iframe": Object {
                  "contentWindow": Object {
                    "postMessage": [Function],
                  },
                },
                "runList": Object {
                  "onAuthorized": Array [
                    Object {
                      "name": "testAuth",
                    },
                  ],
                  "onContext": Array [
                    Object {
                      "name": "testContext",
                    },
                  ],
                },
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "iframe": Object {
                  "contentWindow": Object {
                    "postMessage": [Function],
                  },
                },
                "runList": Object {
                  "onAuthorized": Array [
                    Object {
                      "name": "testAuth",
                    },
                  ],
                  "onContext": Array [
                    Object {
                      "name": "testContext",
                    },
                  ],
                },
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": 0,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 6,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 7,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": null,
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": "[Response Recieved]",
              "className": "runlist-trigger__text",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": "[Response Recieved]",
              "className": "runlist-trigger__text",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 10,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": "testContext",
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "testContext",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "testContext",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 11,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": "testAuth",
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "testAuth",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "testAuth",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <option>
                    testAuth
</option>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "option",
                  "updateQueue": null,
                },
                "stateNode": <option>
                  testContext
</option>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "option",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <option>
                    testContext
</option>,
                  <option>
                    testAuth
</option>,
                ],
                "className": "runlist-trigger__select",
                "onChange": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <option>
                    testContext
</option>,
                  <option>
                    testAuth
</option>,
                ],
                "className": "runlist-trigger__select",
                "onChange": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Trigger",
                  "className": "runlist-trigger__button",
                  "onClick": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "Trigger",
                  "className": "runlist-trigger__button",
                  "onClick": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <button
                  class="runlist-trigger__button"
>
                  Trigger
</button>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "button",
                "updateQueue": null,
              },
              "stateNode": <select
                class="runlist-trigger__select"
>
                <option>
                                testContext
                </option>
                <option>
                                testAuth
                </option>
</select>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "select",
              "updateQueue": null,
            },
            "stateNode": <div
              class="runlist-trigger__text"
>
              [Response Recieved]
</div>,
            "tag": 5,
            "treeBaseTime": 0,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 0,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <div
                className="runlist-trigger__text"
>
                [Response Recieved]
</div>,
              <select
                className="runlist-trigger__select"
                onChange={[Function]}
>
                <option>
                                testContext
                </option>
                <option>
                                testAuth
                </option>
</select>,
              <button
                className="runlist-trigger__button"
                onClick={[Function]}
>
                Trigger
</button>,
            ],
            "className": "runlist-trigger",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <div
                className="runlist-trigger__text"
>
                [Response Recieved]
</div>,
              <select
                className="runlist-trigger__select"
                onChange={[Function]}
>
                <option>
                                testContext
                </option>
                <option>
                                testAuth
                </option>
</select>,
              <button
                className="runlist-trigger__button"
                onClick={[Function]}
>
                Trigger
</button>,
            ],
            "className": "runlist-trigger",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": <div
            class="runlist-trigger"
>
            <div
                        class="runlist-trigger__text"
            >
                        [Response Recieved]
            </div>
            <select
                        class="runlist-trigger__select"
            >
                        <option>
                                    testContext
                        </option>
                        <option>
                                    testAuth
                        </option>
            </select>
            <button
                        class="runlist-trigger__button"
            >
                        Trigger
            </button>
</div>,
          "tag": 5,
          "treeBaseTime": 0,
          "type": "div",
          "updateQueue": null,
        },
        "effectTag": 1,
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "iframe": Object {
            "contentWindow": Object {
              "postMessage": [Function],
            },
          },
          "runList": Object {
            "onAuthorized": Array [
              Object {
                "name": "testAuth",
              },
            ],
            "onContext": Array [
              Object {
                "name": "testContext",
              },
            ],
          },
        },
        "memoizedState": Object {
          "runListTriggerMap": Object {
            "testAuth": Object {
              "name": "testAuth",
            },
            "testContext": Object {
              "name": "testContext",
            },
          },
          "selectedTrigger": "testContext",
          "triggerState": 0,
          "triggerTypeMap": Object {
            "testAuth": "onAuthorized",
            "testContext": "onContext",
          },
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "iframe": Object {
            "contentWindow": Object {
              "postMessage": [Function],
            },
          },
          "runList": Object {
            "onAuthorized": Array [
              Object {
                "name": "testAuth",
              },
            ],
            "onContext": Array [
              Object {
                "name": "testContext",
              },
            ],
          },
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "iframe": Object {
                "contentWindow": Object {
                  "postMessage": [Function],
                },
              },
              "runList": Object {
                "onAuthorized": Array [
                  Object {
                    "name": "testAuth",
                  },
                ],
                "onContext": Array [
                  Object {
                    "name": "testContext",
                  },
                ],
              },
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "iframe": Object {
                "contentWindow": Object {
                  "postMessage": [Function],
                },
              },
              "runList": Object {
                "onAuthorized": Array [
                  Object {
                    "name": "testAuth",
                  },
                ],
                "onContext": Array [
                  Object {
                    "name": "testContext",
                  },
                ],
              },
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "iframe": Object {
                "contentWindow": Object {
                  "postMessage": [Function],
                },
              },
              "runList": Object {
                "onAuthorized": Array [
                  Object {
                    "name": "testAuth",
                  },
                ],
                "onContext": Array [
                  Object {
                    "name": "testContext",
                  },
                ],
              },
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="runlist-trigger"
                  >
                                    <div
                                                      class="runlist-trigger__text"
                                    >
                                                      [Response Recieved]
                                    </div>
                                    <select
                                                      class="runlist-trigger__select"
                                    >
                                                      <option>
                                                                        testContext
                                                      </option>
                                                      <option>
                                                                        testAuth
                                                      </option>
                                    </select>
                                    <button
                                                      class="runlist-trigger__button"
                                    >
                                                      Trigger
                                    </button>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "expirationTime": 1,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "iframe": Object {
                                                                    "contentWindow": Object {
                                                                      "postMessage": [Function],
                                                                    },
                                                                  },
                                                                  "runList": Object {
                                                                    "onAuthorized": Array [
                                                                      Object {
                                                                        "name": "testAuth",
                                                                      },
                                                                    ],
                                                                    "onContext": Array [
                                                                      Object {
                                                                        "name": "testContext",
                                                                      },
                                                                    ],
                                                                  },
                                                                }
                      }
/>,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "iframe": Object {
                                                                    "contentWindow": Object {
                                                                      "postMessage": [Function],
                                                                    },
                                                                  },
                                                                  "runList": Object {
                                                                    "onAuthorized": Array [
                                                                      Object {
                                                                        "name": "testAuth",
                                                                      },
                                                                    ],
                                                                    "onContext": Array [
                                                                      Object {
                                                                        "name": "testContext",
                                                                      },
                                                                    ],
                                                                  },
                                                                }
                      }
/>,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                                Object {
                                                "iframe": Object {
                                                  "contentWindow": Object {
                                                    "postMessage": [Function],
                                                  },
                                                },
                                                "runList": Object {
                                                  "onAuthorized": Array [
                                                    Object {
                                                      "name": "testAuth",
                                                    },
                                                  ],
                                                  "onContext": Array [
                                                    Object {
                                                      "name": "testContext",
                                                    },
                                                  ],
                                                },
                                              }
                }
/>,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                                class="runlist-trigger"
                >
                                <div
                                                class="runlist-trigger__text"
                                >
                                                [Response Recieved]
                                </div>
                                <select
                                                class="runlist-trigger__select"
                                >
                                                <option>
                                                                testContext
                                                </option>
                                                <option>
                                                                testAuth
                                                </option>
                                </select>
                                <button
                                                class="runlist-trigger__button"
                                >
                                                Trigger
                                </button>
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "iframe": Object {
                                                        "contentWindow": Object {
                                                          "postMessage": [Function],
                                                        },
                                                      },
                                                      "runList": Object {
                                                        "onAuthorized": Array [
                                                          Object {
                                                            "name": "testAuth",
                                                          },
                                                        ],
                                                        "onContext": Array [
                                                          Object {
                                                            "name": "testContext",
                                                          },
                                                        ],
                                                      },
                                                    }
                  }
/>,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "iframe": Object {
                  "contentWindow": Object {
                    "postMessage": [Function],
                  },
                },
                "runList": Object {
                  "onAuthorized": Array [
                    Object {
                      "name": "testAuth",
                    },
                  ],
                  "onContext": Array [
                    Object {
                      "name": "testContext",
                    },
                  ],
                },
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "iframe": Object {
                  "contentWindow": Object {
                    "postMessage": [Function],
                  },
                },
                "runList": Object {
                  "onAuthorized": Array [
                    Object {
                      "name": "testAuth",
                    },
                  ],
                  "onContext": Array [
                    Object {
                      "name": "testContext",
                    },
                  ],
                },
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseTime": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "treeBaseTime": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "context": Object {},
      "props": Object {
        "iframe": Object {
          "contentWindow": Object {
            "postMessage": [Function],
          },
        },
        "runList": Object {
          "onAuthorized": Array [
            Object {
              "name": "testAuth",
            },
          ],
          "onContext": Array [
            Object {
              "name": "testContext",
            },
          ],
        },
      },
      "refs": Object {},
      "state": Object {
        "runListTriggerMap": Object {
          "testAuth": Object {
            "name": "testAuth",
          },
          "testContext": Object {
            "name": "testContext",
          },
        },
        "selectedTrigger": "testContext",
        "triggerState": 0,
        "triggerTypeMap": Object {
          "testAuth": "onAuthorized",
          "testContext": "onContext",
        },
      },
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "iframe": Object {
        "contentWindow": Object {
          "postMessage": [Function],
        },
      },
      "runList": Object {
        "onAuthorized": Array [
          Object {
            "name": "testAuth",
          },
        ],
        "onContext": Array [
          Object {
            "name": "testContext",
          },
        ],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="runlist-trigger"
>
        <div
                class="runlist-trigger__text"
        >
                [Response Recieved]
        </div>
        <select
                class="runlist-trigger__select"
        >
                <option>
                        testContext
                </option>
                <option>
                        testAuth
                </option>
        </select>
        <button
                class="runlist-trigger__button"
        >
                Trigger
        </button>
</div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="runlist-trigger__text"
>
            [Response Recieved]
</div>,
          <select
            className="runlist-trigger__select"
            onChange={[Function]}
>
            <option>
                        testContext
            </option>
            <option>
                        testAuth
            </option>
</select>,
          <button
            className="runlist-trigger__button"
            onClick={[Function]}
>
            Trigger
</button>,
        ],
        "className": "runlist-trigger",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <div
            class="runlist-trigger__text"
>
            [Response Recieved]
</div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "[Response Recieved]",
            "className": "runlist-trigger__text",
          },
          "ref": null,
          "rendered": Array [
            "[Response Recieved]",
          ],
          "type": "div",
        },
        Object {
          "instance": <select
            class="runlist-trigger__select"
>
            <option>
                        testContext
            </option>
            <option>
                        testAuth
            </option>
</select>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <option>
                testContext
</option>,
              <option>
                testAuth
</option>,
            ],
            "className": "runlist-trigger__select",
            "onChange": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <option>
                testContext
</option>,
              "key": "testContext",
              "nodeType": "host",
              "props": Object {
                "children": "testContext",
              },
              "ref": null,
              "rendered": Array [
                "testContext",
              ],
              "type": "option",
            },
            Object {
              "instance": <option>
                testAuth
</option>,
              "key": "testAuth",
              "nodeType": "host",
              "props": Object {
                "children": "testAuth",
              },
              "ref": null,
              "rendered": Array [
                "testAuth",
              ],
              "type": "option",
            },
          ],
          "type": "select",
        },
        Object {
          "instance": <button
            class="runlist-trigger__button"
>
            Trigger
</button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Trigger",
            "className": "runlist-trigger__button",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            "Trigger",
          ],
          "type": "button",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": RunListTrigger {
        "_reactInternalFiber": FiberNode {
          "_debugID": 5,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 4,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "iframe": Object {
                  "contentWindow": Object {
                    "postMessage": [Function],
                  },
                },
                "runList": Object {
                  "onAuthorized": Array [
                    Object {
                      "name": "testAuth",
                    },
                  ],
                  "onContext": Array [
                    Object {
                      "name": "testContext",
                    },
                  ],
                },
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "iframe": Object {
                  "contentWindow": Object {
                    "postMessage": [Function],
                  },
                },
                "runList": Object {
                  "onAuthorized": Array [
                    Object {
                      "name": "testAuth",
                    },
                  ],
                  "onContext": Array [
                    Object {
                      "name": "testContext",
                    },
                  ],
                },
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "iframe": Object {
                  "contentWindow": Object {
                    "postMessage": [Function],
                  },
                },
                "runList": Object {
                  "onAuthorized": Array [
                    Object {
                      "name": "testAuth",
                    },
                  ],
                  "onContext": Array [
                    Object {
                      "name": "testContext",
                    },
                  ],
                },
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                                        class="runlist-trigger"
                    >
                                        <div
                                                            class="runlist-trigger__text"
                                        >
                                                            [Response Recieved]
                                        </div>
                                        <select
                                                            class="runlist-trigger__select"
                                        >
                                                            <option>
                                                                                testContext
                                                            </option>
                                                            <option>
                                                                                testAuth
                                                            </option>
                                        </select>
                                        <button
                                                            class="runlist-trigger__button"
                                        >
                                                            Trigger
                                        </button>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "expirationTime": 1,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "iframe": Object {
                                                                          "contentWindow": Object {
                                                                            "postMessage": [Function],
                                                                          },
                                                                        },
                                                                        "runList": Object {
                                                                          "onAuthorized": Array [
                                                                            Object {
                                                                              "name": "testAuth",
                                                                            },
                                                                          ],
                                                                          "onContext": Array [
                                                                            Object {
                                                                              "name": "testContext",
                                                                            },
                                                                          ],
                                                                        },
                                                                      }
                        }
/>,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "iframe": Object {
                                                                          "contentWindow": Object {
                                                                            "postMessage": [Function],
                                                                          },
                                                                        },
                                                                        "runList": Object {
                                                                          "onAuthorized": Array [
                                                                            Object {
                                                                              "name": "testAuth",
                                                                            },
                                                                          ],
                                                                          "onContext": Array [
                                                                            Object {
                                                                              "name": "testContext",
                                                                            },
                                                                          ],
                                                                        },
                                                                      }
                        }
/>,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "iframe": Object {
                                                        "contentWindow": Object {
                                                          "postMessage": [Function],
                                                        },
                                                      },
                                                      "runList": Object {
                                                        "onAuthorized": Array [
                                                          Object {
                                                            "name": "testAuth",
                                                          },
                                                        ],
                                                        "onContext": Array [
                                                          Object {
                                                            "name": "testContext",
                                                          },
                                                        ],
                                                      },
                                                    }
                  }
/>,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="runlist-trigger"
                  >
                                    <div
                                                      class="runlist-trigger__text"
                                    >
                                                      [Response Recieved]
                                    </div>
                                    <select
                                                      class="runlist-trigger__select"
                                    >
                                                      <option>
                                                                        testContext
                                                      </option>
                                                      <option>
                                                                        testAuth
                                                      </option>
                                    </select>
                                    <button
                                                      class="runlist-trigger__button"
                                    >
                                                      Trigger
                                    </button>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                                        Object {
                                                            "iframe": Object {
                                                              "contentWindow": Object {
                                                                "postMessage": [Function],
                                                              },
                                                            },
                                                            "runList": Object {
                                                              "onAuthorized": Array [
                                                                Object {
                                                                  "name": "testAuth",
                                                                },
                                                              ],
                                                              "onContext": Array [
                                                                Object {
                                                                  "name": "testContext",
                                                                },
                                                              ],
                                                            },
                                                          }
                    }
/>,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "iframe": Object {
                    "contentWindow": Object {
                      "postMessage": [Function],
                    },
                  },
                  "runList": Object {
                    "onAuthorized": Array [
                      Object {
                        "name": "testAuth",
                      },
                    ],
                    "onContext": Array [
                      Object {
                        "name": "testContext",
                      },
                    ],
                  },
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "iframe": Object {
                    "contentWindow": Object {
                      "postMessage": [Function],
                    },
                  },
                  "runList": Object {
                    "onAuthorized": Array [
                      Object {
                        "name": "testAuth",
                      },
                    ],
                    "onContext": Array [
                      Object {
                        "name": "testContext",
                      },
                    ],
                  },
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": "[Response Recieved]",
                "className": "runlist-trigger__text",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": "[Response Recieved]",
                "className": "runlist-trigger__text",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": "testContext",
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "testContext",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "testContext",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": "testAuth",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "testAuth",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "testAuth",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <option>
                      testAuth
</option>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "option",
                    "updateQueue": null,
                  },
                  "stateNode": <option>
                    testContext
</option>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "option",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <option>
                      testContext
</option>,
                    <option>
                      testAuth
</option>,
                  ],
                  "className": "runlist-trigger__select",
                  "onChange": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <option>
                      testContext
</option>,
                    <option>
                      testAuth
</option>,
                  ],
                  "className": "runlist-trigger__select",
                  "onChange": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Trigger",
                    "className": "runlist-trigger__button",
                    "onClick": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Trigger",
                    "className": "runlist-trigger__button",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <button
                    class="runlist-trigger__button"
>
                    Trigger
</button>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "button",
                  "updateQueue": null,
                },
                "stateNode": <select
                  class="runlist-trigger__select"
>
                  <option>
                                    testContext
                  </option>
                  <option>
                                    testAuth
                  </option>
</select>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "select",
                "updateQueue": null,
              },
              "stateNode": <div
                class="runlist-trigger__text"
>
                [Response Recieved]
</div>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <div
                  className="runlist-trigger__text"
>
                  [Response Recieved]
</div>,
                <select
                  className="runlist-trigger__select"
                  onChange={[Function]}
>
                  <option>
                                    testContext
                  </option>
                  <option>
                                    testAuth
                  </option>
</select>,
                <button
                  className="runlist-trigger__button"
                  onClick={[Function]}
>
                  Trigger
</button>,
              ],
              "className": "runlist-trigger",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <div
                  className="runlist-trigger__text"
>
                  [Response Recieved]
</div>,
                <select
                  className="runlist-trigger__select"
                  onChange={[Function]}
>
                  <option>
                                    testContext
                  </option>
                  <option>
                                    testAuth
                  </option>
</select>,
                <button
                  className="runlist-trigger__button"
                  onClick={[Function]}
>
                  Trigger
</button>,
              ],
              "className": "runlist-trigger",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": <div
              class="runlist-trigger"
>
              <div
                            class="runlist-trigger__text"
              >
                            [Response Recieved]
              </div>
              <select
                            class="runlist-trigger__select"
              >
                            <option>
                                          testContext
                            </option>
                            <option>
                                          testAuth
                            </option>
              </select>
              <button
                            class="runlist-trigger__button"
              >
                            Trigger
              </button>
</div>,
            "tag": 5,
            "treeBaseTime": 0,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "iframe": Object {
              "contentWindow": Object {
                "postMessage": [Function],
              },
            },
            "runList": Object {
              "onAuthorized": Array [
                Object {
                  "name": "testAuth",
                },
              ],
              "onContext": Array [
                Object {
                  "name": "testContext",
                },
              ],
            },
          },
          "memoizedState": Object {
            "runListTriggerMap": Object {
              "testAuth": Object {
                "name": "testAuth",
              },
              "testContext": Object {
                "name": "testContext",
              },
            },
            "selectedTrigger": "testContext",
            "triggerState": 0,
            "triggerTypeMap": Object {
              "testAuth": "onAuthorized",
              "testContext": "onContext",
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "iframe": Object {
              "contentWindow": Object {
                "postMessage": [Function],
              },
            },
            "runList": Object {
              "onAuthorized": Array [
                Object {
                  "name": "testAuth",
                },
              ],
              "onContext": Array [
                Object {
                  "name": "testContext",
                },
              ],
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 4,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "iframe": Object {
                  "contentWindow": Object {
                    "postMessage": [Function],
                  },
                },
                "runList": Object {
                  "onAuthorized": Array [
                    Object {
                      "name": "testAuth",
                    },
                  ],
                  "onContext": Array [
                    Object {
                      "name": "testContext",
                    },
                  ],
                },
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "iframe": Object {
                  "contentWindow": Object {
                    "postMessage": [Function],
                  },
                },
                "runList": Object {
                  "onAuthorized": Array [
                    Object {
                      "name": "testAuth",
                    },
                  ],
                  "onContext": Array [
                    Object {
                      "name": "testContext",
                    },
                  ],
                },
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "iframe": Object {
                  "contentWindow": Object {
                    "postMessage": [Function],
                  },
                },
                "runList": Object {
                  "onAuthorized": Array [
                    Object {
                      "name": "testAuth",
                    },
                  ],
                  "onContext": Array [
                    Object {
                      "name": "testContext",
                    },
                  ],
                },
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                                        class="runlist-trigger"
                    >
                                        <div
                                                            class="runlist-trigger__text"
                                        >
                                                            [Response Recieved]
                                        </div>
                                        <select
                                                            class="runlist-trigger__select"
                                        >
                                                            <option>
                                                                                testContext
                                                            </option>
                                                            <option>
                                                                                testAuth
                                                            </option>
                                        </select>
                                        <button
                                                            class="runlist-trigger__button"
                                        >
                                                            Trigger
                                        </button>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "expirationTime": 1,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "iframe": Object {
                                                                          "contentWindow": Object {
                                                                            "postMessage": [Function],
                                                                          },
                                                                        },
                                                                        "runList": Object {
                                                                          "onAuthorized": Array [
                                                                            Object {
                                                                              "name": "testAuth",
                                                                            },
                                                                          ],
                                                                          "onContext": Array [
                                                                            Object {
                                                                              "name": "testContext",
                                                                            },
                                                                          ],
                                                                        },
                                                                      }
                        }
/>,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "iframe": Object {
                                                                          "contentWindow": Object {
                                                                            "postMessage": [Function],
                                                                          },
                                                                        },
                                                                        "runList": Object {
                                                                          "onAuthorized": Array [
                                                                            Object {
                                                                              "name": "testAuth",
                                                                            },
                                                                          ],
                                                                          "onContext": Array [
                                                                            Object {
                                                                              "name": "testContext",
                                                                            },
                                                                          ],
                                                                        },
                                                                      }
                        }
/>,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "iframe": Object {
                                                        "contentWindow": Object {
                                                          "postMessage": [Function],
                                                        },
                                                      },
                                                      "runList": Object {
                                                        "onAuthorized": Array [
                                                          Object {
                                                            "name": "testAuth",
                                                          },
                                                        ],
                                                        "onContext": Array [
                                                          Object {
                                                            "name": "testContext",
                                                          },
                                                        ],
                                                      },
                                                    }
                  }
/>,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="runlist-trigger"
                  >
                                    <div
                                                      class="runlist-trigger__text"
                                    >
                                                      [Response Recieved]
                                    </div>
                                    <select
                                                      class="runlist-trigger__select"
                                    >
                                                      <option>
                                                                        testContext
                                                      </option>
                                                      <option>
                                                                        testAuth
                                                      </option>
                                    </select>
                                    <button
                                                      class="runlist-trigger__button"
                                    >
                                                      Trigger
                                    </button>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                                        Object {
                                                            "iframe": Object {
                                                              "contentWindow": Object {
                                                                "postMessage": [Function],
                                                              },
                                                            },
                                                            "runList": Object {
                                                              "onAuthorized": Array [
                                                                Object {
                                                                  "name": "testAuth",
                                                                },
                                                              ],
                                                              "onContext": Array [
                                                                Object {
                                                                  "name": "testContext",
                                                                },
                                                              ],
                                                            },
                                                          }
                    }
/>,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "iframe": Object {
                    "contentWindow": Object {
                      "postMessage": [Function],
                    },
                  },
                  "runList": Object {
                    "onAuthorized": Array [
                      Object {
                        "name": "testAuth",
                      },
                    ],
                    "onContext": Array [
                      Object {
                        "name": "testContext",
                      },
                    ],
                  },
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "iframe": Object {
                    "contentWindow": Object {
                      "postMessage": [Function],
                    },
                  },
                  "runList": Object {
                    "onAuthorized": Array [
                      Object {
                        "name": "testAuth",
                      },
                    ],
                    "onContext": Array [
                      Object {
                        "name": "testContext",
                      },
                    ],
                  },
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "props": Object {
          "iframe": Object {
            "contentWindow": Object {
              "postMessage": [Function],
            },
          },
          "runList": Object {
            "onAuthorized": Array [
              Object {
                "name": "testAuth",
              },
            ],
            "onContext": Array [
              Object {
                "name": "testContext",
              },
            ],
          },
        },
        "refs": Object {},
        "state": Object {
          "runListTriggerMap": Object {
            "testAuth": Object {
              "name": "testAuth",
            },
            "testContext": Object {
              "name": "testContext",
            },
          },
          "selectedTrigger": "testContext",
          "triggerState": 0,
          "triggerTypeMap": Object {
            "testAuth": "onAuthorized",
            "testContext": "onContext",
          },
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "iframe": Object {
          "contentWindow": Object {
            "postMessage": [Function],
          },
        },
        "runList": Object {
          "onAuthorized": Array [
            Object {
              "name": "testAuth",
            },
          ],
          "onContext": Array [
            Object {
              "name": "testContext",
            },
          ],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="runlist-trigger"
>
          <div
                    class="runlist-trigger__text"
          >
                    [Response Recieved]
          </div>
          <select
                    class="runlist-trigger__select"
          >
                    <option>
                              testContext
                    </option>
                    <option>
                              testAuth
                    </option>
          </select>
          <button
                    class="runlist-trigger__button"
          >
                    Trigger
          </button>
</div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="runlist-trigger__text"
>
              [Response Recieved]
</div>,
            <select
              className="runlist-trigger__select"
              onChange={[Function]}
>
              <option>
                            testContext
              </option>
              <option>
                            testAuth
              </option>
</select>,
            <button
              className="runlist-trigger__button"
              onClick={[Function]}
>
              Trigger
</button>,
          ],
          "className": "runlist-trigger",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <div
              class="runlist-trigger__text"
>
              [Response Recieved]
</div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "[Response Recieved]",
              "className": "runlist-trigger__text",
            },
            "ref": null,
            "rendered": Array [
              "[Response Recieved]",
            ],
            "type": "div",
          },
          Object {
            "instance": <select
              class="runlist-trigger__select"
>
              <option>
                            testContext
              </option>
              <option>
                            testAuth
              </option>
</select>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option>
                  testContext
</option>,
                <option>
                  testAuth
</option>,
              ],
              "className": "runlist-trigger__select",
              "onChange": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <option>
                  testContext
</option>,
                "key": "testContext",
                "nodeType": "host",
                "props": Object {
                  "children": "testContext",
                },
                "ref": null,
                "rendered": Array [
                  "testContext",
                ],
                "type": "option",
              },
              Object {
                "instance": <option>
                  testAuth
</option>,
                "key": "testAuth",
                "nodeType": "host",
                "props": Object {
                  "children": "testAuth",
                },
                "ref": null,
                "rendered": Array [
                  "testAuth",
                ],
                "type": "option",
              },
            ],
            "type": "select",
          },
          Object {
            "instance": <button
              class="runlist-trigger__button"
>
              Trigger
</button>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Trigger",
              "className": "runlist-trigger__button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Array [
              "Trigger",
            ],
            "type": "button",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
